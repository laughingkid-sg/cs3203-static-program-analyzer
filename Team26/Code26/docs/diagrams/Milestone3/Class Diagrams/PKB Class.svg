<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1957px" height="2431px" viewBox="-0.5 -0.5 1957 2431" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-04-09T09:42:23.416Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36&quot; etag=&quot;45LMcEaRTp_z3dfjvOWF&quot; version=&quot;21.1.5&quot; type=&quot;google&quot; pages=&quot;2&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;diagram name=&quot;Simplified&quot; id=&quot;K5ruk0ruEQON4pFgz-qh&quot;&gt;7V3bctu2Fv0aPcbD++UxtpM2M0nHx06a9hGWIImntKhD0bHdrz8gxSs2JIISKRHydqcTi6RIGlhrYWNfgIl58/T6W0zWy2/RjIYTQ1vEwWxi3k4MQ2f/swNrsqCNA+kVD8G/xUEtP/oczOimcWESRWESrJsHp9FqRadJ4xiJ4+iledk8CuFrPExJSMHRn8EsWeZHdcevTvxOg8Uyf5JnuNsTT6S4OH/xzZLMopfaIfPTxLyJoyjZ/vb0ekPDtGWKdjEeHlY368R6+Pa/v778Iv/5YHx2Pmxv9rnLV8o/IaarpN9bG9tb/yLhc95eE8MJ2UOuq3+1YJXQeE6mdJL+3c4iP138OzFM1rfm9Zd7Smb3NCRJEK02y2D9jaxY48Z56yVvRZdsXoKnkKzYp+t5tEoe8jPpPUgYLFbs9ylNn8kO/KJxErDe/JifSKI1OzpdBuHsK3mLntP22CRk+k/x6XoZxcG/7LYkZKd0doCdjpMch5bWuOIh/Wb+6Jhu2DV3RSPr5aGvZJPk10yjMCTrTfCYvXB6yROJF8HqOkqS6Km4UfS8mtFZ/qlETfYhiaN/Shym358HYXgThVGcNY1J9ZlN3fLK2hnfcU3iZC0uBYYcNGn70dcaFXJw/EajJ5rEb+yS/Kyp2duvvOVXW3p+j5eKN4adk2FZo4ydU4nkzFyU9y4fd8+YTFaLkFbP002t8TzT08DjdEfwuBRx9ceRkEFlRRJ6nTb8pk4C9kvtT60OZdToQBNTQBMO1GGQAXqZPFW44zu7QHdI54kA20/BbJbe7nqzJtNgtfieYv32g14d+Zp98dasjtzn7WJmwEtIQh5LMoXkkYZ30SZICcmOxdtrr9cRY3TWePb1xL7NjsTJDSNtEpMgQxVlmH+hKe63FN2yJ6O5JP4Mafzl/W/B7heizdsNtka3d+3jYnyq9SmdsaEk/8haaBktohUJP1VHOa5X13yNsr5Lu+6/NEne8gYkz0nUBAl9DZK/0q9f2fmnv2tnbl/zO2cf3vIPaY98Jk9BmB74nYa/aAojQVelnwsJmdE5ec4UfUY2y+yVs6esZh/TQTX9C9d0tT3yOUibbvvgFWvb2gumH/+un6teMftUvCMEP7tv8W5GZxnbRM/xlO67LhcFpvULuu+Gdg7MtG/3wjLORrJfTTNij8TdpayqyZvuN/VNNws0FzfZvmv+vQq9rD/IW+2ynK57nuRyym2anCnAf0Oz+XdrfoP9sn2LXlW0GE86MYyNn+v0bG4Oplg+D+sOZUKDbpkkXzOjY5H9DZCczXGfP96wHI5TgXbij4KuhZneM11PwDFLOwvHoGWCHEOO7eWY5arKMfc8HDORY8ixjuOYoyrHfO8sHLOQY8ixbhxzh5naDc8x1zwLxWykGFKsG8VUZZg1NMNCakYfyXP0/EyWD6zRftxfPxatdSaPYo1KFbG6kUlvIZMQDefApe8cicPjXMf5a9biAw9MGtN46IhiX4YzGXXsaz6nznQKRJedmbn+o9Yh9tA59qVrvJErDEfognCEpe0G1e7gl807YAWPG0vwS/cAugGsLzb6JYs4Rxpyb82ObMPXUOGuwunTX+j/0yoJkjcM+ncWvkeNmtQRCZ9GPc3zhhQ+mxc+YdTfEgDz8qP+FgpfK+JKGTkqzi/C11DCVwSA+xO+O5KkWETl627y2el/3KSYHd/+iBTRyX4GVESfDymIBNHU3qUg2pgH1TkPqpSbYwRSiLehBNKBs9kjBPJnHCQUTUMFTUPPObFp6PEZU5pnj1YLHdH86b1ooSTmnM6z4nMbh0W6UY/ah9bhBVmHugEcd2gelvFXDSWxVRJ9aciNxBwsouo9SiIWCalaJGT7MkVC7vuUv/c8O5YEXCkmR1mEInwNJn9wNjza2ezYI7znnM26/Gy2DMHWpcQXIOuwCK9pSSiXCMjnUC4MdLQrVx8RXiG+BlMuOJcdueE1dv06Z3W2xxleIvkyRXpiObvxdRny5YlmKChfYjE4Rr6E+Coy9XvXL88C3TpeX9rYpWuMvjRdlzDJjPdpknkiRzRqmlggjkq6G8gkEyaEH1IAP6qE8Lbqiu3fN1xCeNFZI08IL14TJoTj0NV56GI2tzezREOUZzyaww5RIC9clKgtzNvlF/u4vCHKR7O7FXGlECiTF+7vrGX5kQQh6pYS9SweJyO6oQl0xOzNslaqnMWw371uASTJSNkOi2qPt1MEsMGWb7Nht/7Y0M0DWlydleucfs4Cj4WSuBoMMAul5PJ9Arotysx9X8rVjrhSB44K1IgQNpx0wVzS7xOD3Uz7Afq3yeuXZZDQhzXJJs0vMVk3u76x2MGutQyGorIFivR92NAiapl7mHxkQ8NA5wU0tMvHhkbQ0NB9+V3hFtbdooxjXxMX9YKnaWIH+piUbmJQeGWbcCgW5YIP2MT6RTWxofHTwhGgGDqRLkCRHYeP1guwfFpFdiSyE2uLED2GUTonAYtF716SqNb2zY46dHGZalUo07Am9diFlrb9vugF+3BH44A1XTp9u+3uagERDNmVkVojGNtAPESOyPg8cglqm1/R3zM4eG3fFqxADZdPKkzk4k7OQGtZg1e2jY4LO3FfGGjpNAfmJijDJkf3T8ymQ1fuGxednCLTpaITl/oiSyfb5FDu2NydeqKTo3ekE1iJ8ER0knDJjpVOpq7X6XRuKu1YzFmGSjscvANQSfc0v6ehCa4BbVv6lcl55/raaqF8TVlCCV7vNIyScBWOlVG2Vzf3PrARyvJGZ+8VDTwuWvHpCofTyueL8S1/GJNP91zO5d/KKbAk9Yk4JVHyPxCnKm5YBscNrSWTS8CN45b77C2Zq8jf628TkCE4VSY9H88psCWIVXhu++aUUWBVmlPg3U7EKYnSo7GOU+aoDL8dG1tJ8/A0bNL5MrzD2aQZ/hVnRdo6E8RiC5zeOdXCEIlttk7EKYncceF643XeNBjWmURtecKHrPje8+gjnUpcrO16ltGHX2+klOnOdNG5KKHF+5p38KQ3WAqWB/kchWH0ssEUnYnSKTpFnAxTdHQXhgwBrN99ik6pBOqk6LiwG09YutMwNFtKd3bFOmsj/irKALhrp9fGQF6N66eZFOrFMirt47IrOy08No7GOyg8i7vH4EMnDN7mQ+d3HDuVHjs9A8fOEuUSQVUcO01pzI1m7ITRvW/RLJgHmJ2vmHw5Dm/6Y3Z+BXPMzpeQL/Wy810Y9tkqAGqX2tqFbosK47gCnIR2dd7r5vzaBUMBWwXAeaPa4oXzxtr+hDCwgOK1UwnUES8P+tLTiu47lC6VpAu4vBwLpauEuIHS1Yo4Tx5zo5Eu6LAvXF4oX0rJF7C8UL5qMEePvYR8qeex9w6rx6mlkDkTPr7ceyJmN8a316CdMcnY5nKMDe3QrEjbbmZ5Mf04thSmf9VwIJgwl+LoopXe8x6gx9TTrgo1a4ETLNT1JG62A+X9Ic9F5KmJPKNP5AluNjjyPESekshznB6RJ7rZ4MiDIYDMoiUYwDxgJnrOLax8i182AKeiZWsKllwHuMapqHpBAB8GAe7iIBWlp+SPCBVMKQVz4IpEqGAl0jEW0A45Xx50o1EwGAu4p2SGAnYRAuahgJVAx2iAhICpFw3wYTTgyxyFSynhAnNHzH6tARwz9yWES73MfV+QuR9HUzp7jnEjNrX0CxhePvq+Kpxj9r6EfqmXve9D1306a0TpUkq6gOmF0lWtmq6h215CupRz2xsadNt/3GxYZ6B4KSVewO7CmGMN5Oixb4VcpQQKiZcJuhGTdUaYrCPwah2Roai7/K49Z0hRNDQLsaco9o7IURRg7/RJikYx1iP2VMPeMVmKEHtnSFM0NOiD/5PEQWq24JRBqSmDy+37yub4OGUoYS6xhwROGRxp0I1mygBd8D+ZuKB2qaVdwN2BYfIaxiX2FUDt8qRBNxbt0iV88L1V++623A+rAhbvJFFOGE6xk0Q5XrXXGJ9zKwmPM/OZ2nAiIr85GF+vbPhyVca9aZEO4ws3JAxxQVm1VteA62FjPm2FcQwvtI+3unrhBR0WBGTahWsyqq1dmNdRwzjWAkhol3K1AIYOawEy7cJVzZTSLrieLNpdFcaxHEBCu5QrB2AAA/36B33FdFq1lQutrhrCsRBAQrmUKwRgIAfdONLEjHEkYLS7bIv1FVtdtkZBocF3GeSEzdAM/cq0LM9wbc8pA8encrAaMCjwZc6oN8PhUqXhkndSYDJGHeMwiIDD5U4hUGe4LLqRT8ZA+VJNvnhrH+WrDnMYR0D52qkFCskXlgAokYYNXRGaduXYfvUjZbK3Lxvbct+hU7MNLAtQFI/OQHjcf9/B8Qj989va4juSpKMumnidTby5nf6XN0zt+PZHZPo52c+App+uu1h6vJsDWEcgYfupV0dgSHjw33EuLjeESvhviy2qJFzCjhgaQ+TiGpbFa5slNYjK3Erj5G9wV7FghwEShrjArYIFMLCqGR0uJdBNXKxIYtBVb7EiU1xMgGtFqqlhsIgPNazCOoyNoIbtFASFNAwGA7J9UnARBSU1DNhhuFNKDetYXCChYeoVF5iwuCDdKQUl7EIkDGsMKqhjjYGEhKlXY2DiDsNKxEoF6mT1EiyFq6m13HjoaKmJOw8risie0kkgIs+cT2IqU82AiOSA009CiQCR580osaBj//vEYDfTfgCoNoH4sgwS+sAMp/TsS0zWTdDNyGaZXavvQdNgFrhuNC1i3fShfSSyiM09Bvhx9pEFXe2X0NKWO76Who7eS2hpk8e0bcJpXk8tzT7GUZTUxYa1xvJbNKPpFf8H&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-4-1518-242-26-0"><rect x="4" y="1518" width="242" height="26"/></clipPath><clipPath id="mx-clip-4-1544-242-26-0"><rect x="4" y="1544" width="242" height="26"/></clipPath><clipPath id="mx-clip-4-1570-242-26-0"><rect x="4" y="1570" width="242" height="26"/></clipPath><clipPath id="mx-clip-4-1596-242-26-0"><rect x="4" y="1596" width="242" height="26"/></clipPath><clipPath id="mx-clip-4-1622-242-38-0"><rect x="4" y="1622" width="242" height="38"/></clipPath><clipPath id="mx-clip-4-1660-242-40-0"><rect x="4" y="1660" width="242" height="40"/></clipPath><clipPath id="mx-clip-764-561-442-14-0"><rect x="764" y="561" width="442" height="14"/></clipPath><clipPath id="mx-clip-764-583-442-20-0"><rect x="764" y="583" width="442" height="20"/></clipPath><clipPath id="mx-clip-764-603-442-20-0"><rect x="764" y="603" width="442" height="20"/></clipPath><clipPath id="mx-clip-764-623-442-20-0"><rect x="764" y="623" width="442" height="20"/></clipPath><clipPath id="mx-clip-1424-1518-232-26-0"><rect x="1424" y="1518" width="232" height="26"/></clipPath><clipPath id="mx-clip-1424-1544-232-26-0"><rect x="1424" y="1544" width="232" height="26"/></clipPath><clipPath id="mx-clip-1424-1570-232-30-0"><rect x="1424" y="1570" width="232" height="30"/></clipPath><clipPath id="mx-clip-714-1518-292-26-0"><rect x="714" y="1518" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1544-292-26-0"><rect x="714" y="1544" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1570-292-26-0"><rect x="714" y="1570" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1596-292-26-0"><rect x="714" y="1596" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1622-292-26-0"><rect x="714" y="1622" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1648-292-26-0"><rect x="714" y="1648" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1674-292-26-0"><rect x="714" y="1674" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1700-292-26-0"><rect x="714" y="1700" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1726-292-26-0"><rect x="714" y="1726" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1752-292-26-0"><rect x="714" y="1752" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1778-292-26-0"><rect x="714" y="1778" width="292" height="26"/></clipPath><clipPath id="mx-clip-714-1804-292-26-0"><rect x="714" y="1804" width="292" height="26"/></clipPath><clipPath id="mx-clip-1704-1518-232-26-0"><rect x="1704" y="1518" width="232" height="26"/></clipPath><clipPath id="mx-clip-1064-1518-292-26-0"><rect x="1064" y="1518" width="292" height="26"/></clipPath><clipPath id="mx-clip-294-1518-262-22-0"><rect x="294" y="1518" width="262" height="22"/></clipPath><clipPath id="mx-clip-294-1540-262-20-0"><rect x="294" y="1540" width="262" height="20"/></clipPath><clipPath id="mx-clip-1614-1909-182-26-0"><rect x="1614" y="1909" width="182" height="26"/></clipPath><clipPath id="mx-clip-84-1909-362-26-0"><rect x="84" y="1909" width="362" height="26"/></clipPath><clipPath id="mx-clip-84-1935-362-26-0"><rect x="84" y="1935" width="362" height="26"/></clipPath><clipPath id="mx-clip-84-1963-362-20-0"><rect x="84" y="1963" width="362" height="20"/></clipPath><clipPath id="mx-clip-924-1909-282-26-0"><rect x="924" y="1909" width="282" height="26"/></clipPath><clipPath id="mx-clip-924-1935-282-26-0"><rect x="924" y="1935" width="282" height="26"/></clipPath><clipPath id="mx-clip-924-1961-282-26-0"><rect x="924" y="1961" width="282" height="26"/></clipPath><clipPath id="mx-clip-924-1987-282-26-0"><rect x="924" y="1987" width="282" height="26"/></clipPath><clipPath id="mx-clip-844-301-282-26-0"><rect x="844" y="301" width="282" height="26"/></clipPath><clipPath id="mx-clip-844-335-282-26-0"><rect x="844" y="335" width="282" height="26"/></clipPath><clipPath id="mx-clip-844-361-282-26-0"><rect x="844" y="361" width="282" height="26"/></clipPath><clipPath id="mx-clip-844-387-282-26-0"><rect x="844" y="387" width="282" height="26"/></clipPath><clipPath id="mx-clip-124-31-487-19-0"><rect x="124" y="31" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-50-487-19-0"><rect x="124" y="50" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-69-487-19-0"><rect x="124" y="69" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-88-487-19-0"><rect x="124" y="88" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-107-487-19-0"><rect x="124" y="107" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-126-487-19-0"><rect x="124" y="126" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-145-487-19-0"><rect x="124" y="145" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-164-487-19-0"><rect x="124" y="164" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-183-487-19-0"><rect x="124" y="183" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-202-487-19-0"><rect x="124" y="202" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-221-487-19-0"><rect x="124" y="221" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-240-487-19-0"><rect x="124" y="240" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-259-487-19-0"><rect x="124" y="259" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-278-487-19-0"><rect x="124" y="278" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-297-487-19-0"><rect x="124" y="297" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-316-487-19-0"><rect x="124" y="316" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-335-487-19-0"><rect x="124" y="335" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-354-487-19-0"><rect x="124" y="354" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-373-487-19-0"><rect x="124" y="373" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-392-487-19-0"><rect x="124" y="392" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-411-487-19-0"><rect x="124" y="411" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-430-487-19-0"><rect x="124" y="430" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-449-487-19-0"><rect x="124" y="449" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-468-487-19-0"><rect x="124" y="468" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-487-487-19-0"><rect x="124" y="487" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-506-487-19-0"><rect x="124" y="506" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-525-487-19-0"><rect x="124" y="525" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-544-487-19-0"><rect x="124" y="544" width="487" height="19"/></clipPath><clipPath id="mx-clip-124-571-487-20-0"><rect x="124" y="571" width="487" height="20"/></clipPath><clipPath id="mx-clip-124-591-487-20-0"><rect x="124" y="591" width="487" height="20"/></clipPath><clipPath id="mx-clip-124-611-487-20-0"><rect x="124" y="611" width="487" height="20"/></clipPath><clipPath id="mx-clip-124-631-487-20-0"><rect x="124" y="631" width="487" height="20"/></clipPath></defs><g><path d="M 0 1505 L 0 1465 L 250 1465 L 250 1505" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 1505 L 0 1704 L 250 1704 L 250 1505" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 1505 L 250 1505" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="124.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="124.5" y="1496.5">IReadRelationshipManager</text></g><path d="M 0 1509 L 250 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1518-242-26-0)" font-size="10px"><text x="5.5" y="1528.5">+isEmptyMap(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1544-242-26-0)" font-size="10px"><text x="5.5" y="1554.5">+isEmptyReversedMap(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1570-242-26-0)" font-size="10px"><text x="5.5" y="1580.5">+containsMap(T, U): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1596-242-26-0)" font-size="10px"><text x="5.5" y="1606.5">+containsReversedMap(U, T): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1622-242-38-0)" font-size="10px"><text x="5.5" y="1632.5">+getAllRelationshipEntries(): </text><text x="5.5" y="1644.5">       std::unordered_map&lt;T, std::unordered_set&lt;U&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-1660-242-40-0)" font-size="10px"><text x="5.5" y="1670.5">+getAllReversedRelationshipEntries():     </text><text x="5.5" y="1682.5">      std::unordered_map&lt;U, std::unordered_set&lt;T&gt;&gt; </text></g><path d="M 985 1150 L 985 1400 L 860 1400 L 860 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 853.5 1450.88 L 860 1463.88 L 866.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 1150 L 985 1400 L 1210 1400 L 1210 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1203.5 1450.88 L 1210 1463.88 L 1216.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 1150 L 985 1400 L 1540 1400 L 1540 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1533.5 1450.88 L 1540 1463.88 L 1546.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 1150 L 985 1400 L 1820 1400 L 1820 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1813.5 1450.88 L 1820 1463.88 L 1826.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 1150 L 985 1400 L 425 1400 L 425 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 418.5 1450.88 L 425 1463.88 L 431.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 1150 L 985 1400 L 125 1400 L 125 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 118.5 1450.88 L 125 1463.88 L 131.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 760 556 L 760 530 L 1210 530 L 1210 556" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 760 556 L 760 1150 L 1210 1150 L 1210 556" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 760 556 L 1210 556" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="984.5" y="547.5">Storage</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-764-561-442-14-0)" font-size="10px"><text x="765.5" y="571.5">-std::shared_ptr&lt;StorageUtil&gt; storage;</text></g><path d="M 760 574 L 1210 574" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-764-583-442-20-0)" font-size="10px"><text x="765.5" y="593.5">+getFollowsManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-764-603-442-20-0)" font-size="10px"><text x="765.5" y="613.5">+getFollowsTManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-764-623-442-20-0)" font-size="10px"><text x="765.5" y="633.5">+getParentManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 645px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;"> +getParentTManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="655" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px"> +getParentTManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 665px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getUsesPManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="675" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getUsesPManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 685px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getUsesSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="695" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getUsesSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 705px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getModifiesPManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="715" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getModifiesPManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 725px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getModifiesSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="735" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getModifiesSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 745px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getNextManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="755" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getNextManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 765px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallsPManager<span style="background-color: initial;">(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="775" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsPManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 785px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallsSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="795" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsSManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 805px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallsTManager<span style="background-color: initial;">(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="815" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsTManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;std::string, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 825px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getIfCondManager<span style="background-color: initial;">(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="835" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getIfCondManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 845px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getWhileCondManager<span style="background-color: initial;">(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="855" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getWhileCondManager(): std::shared_ptr&lt;RelationshipReadOrWrite&lt;int, std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 865px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getAssignManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</div></div></div></foreignObject><text x="762" y="875" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAssignManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 885px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallProcedureManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="895" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallProcedureManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 905px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="915" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallStmtNoManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 925px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getConstantManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</div></div></div></foreignObject><text x="762" y="935" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getConstantManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 945px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getIfManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</div></div></div></foreignObject><text x="762" y="955" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getIfManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 965px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getPrintStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="975" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getPrintStmtNoManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 985px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getPrintVariableManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="995" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getPrintVariableManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1005px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getProcedureManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="1015" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getProcedureManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1025px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getReadStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="1035" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getReadStmtNoManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1045px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getReadVariableManager<span style="background-color: initial;">(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</span></div></div></div></foreignObject><text x="762" y="1055" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getReadVariableManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1065px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getStmtManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</div></div></div></foreignObject><text x="762" y="1075" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getStmtManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1085px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getVariableManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</div></div></div></foreignObject><text x="762" y="1095" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getVariableManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;std::string&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1105px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getWhileManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</div></div></div></foreignObject><text x="762" y="1115" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getWhileManager(): std::shared_ptr&lt;EntityReadOrWrite&lt;int&gt;&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 448px; height: 1px; padding-top: 1125px; margin-left: 762px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getAssignPatternManager<span style="background-color: initial;">(): </span>&lt;PatternReadOrWrite&lt;std::string, std::shared_ptr&lt;ShuntNode&gt;&gt;&gt; </div></div></div></foreignObject><text x="762" y="1135" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAssignPatternManager(): &lt;PatternReadOrWrite&lt;std::string, std::shared_ptr&lt;ShuntNode&gt;&gt;&gt; </text></switch></g><path d="M 1420 1505 L 1420 1465 L 1660 1465 L 1660 1505" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1420 1505 L 1420 1595 L 1660 1595 L 1660 1505" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1420 1505 L 1660 1505" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1539.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="1539.5" y="1496.5">IReadEntityManager</text></g><path d="M 1420 1509 L 1660 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1424-1518-232-26-0)" font-size="10px"><text x="1425.5" y="1528.5">+isEmpty(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1424-1544-232-26-0)" font-size="10px"><text x="1425.5" y="1554.5">+contains(T): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1424-1570-232-30-0)" font-size="10px"><text x="1425.5" y="1580.5">+getAllEntitiesEntries(): std::unordered_set&lt;T&gt;</text></g><path d="M 710 1505 L 710 1465 L 1010 1465 L 1010 1505" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 710 1505 L 710 1825 L 1010 1825 L 1010 1505" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 710 1505 L 1010 1505" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="859.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="859.5" y="1496.5">IReadPatternManager</text></g><path d="M 710 1509 L 1010 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1518-292-26-0)" font-size="10px"><text x="715.5" y="1528.5">+isEmptyLhsVector(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1544-292-26-0)" font-size="10px"><text x="715.5" y="1554.5">+isEmptyRhsVector(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1570-292-26-0)" font-size="10px"><text x="715.5" y="1580.5">+isEmptyIndexStmtMap(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1596-292-26-0)" font-size="10px"><text x="715.5" y="1606.5">+isEmptyReversedIndexStmtMap(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1622-292-26-0)" font-size="10px"><text x="715.5" y="1632.5">+containsLhsVector(T): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1648-292-26-0)" font-size="10px"><text x="715.5" y="1658.5">+containsRhsVector(U): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1674-292-26-0)" font-size="10px"><text x="715.5" y="1684.5">+containsIndexStmtMap(int, int): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1700-292-26-0)" font-size="10px"><text x="715.5" y="1710.5">+containsReversedIndexStmtMap(int, int): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1726-292-26-0)" font-size="10px"><text x="715.5" y="1736.5">+getAllLhsPatternEntries(): std::unique_ptr&lt;std::vector&lt;T&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1752-292-26-0)" font-size="10px"><text x="715.5" y="1762.5">+getAllRhsPatternEntries(): std::unique_ptr&lt;std::vector&lt;U&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1778-292-26-0)" font-size="10px"><text x="715.5" y="1788.5">+getAllPatternEntries(): std::unordered_map&lt;int, int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-714-1804-292-26-0)" font-size="10px"><text x="715.5" y="1814.5">+getAllReversedPatternEntries(): std::unordered_map&lt;int, int&gt;</text></g><path d="M 1700 1505 L 1700 1465 L 1940 1465 L 1940 1505" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 1505 L 1700 1539 L 1940 1539 L 1940 1505" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 1505 L 1940 1505" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1819.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="1819.5" y="1496.5">IWriteEntityManager</text></g><path d="M 1700 1509 L 1940 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1704-1518-232-26-0)" font-size="10px"><text x="1705.5" y="1528.5">+insertEntity(T): bool</text></g><path d="M 1060 1505 L 1060 1465 L 1360 1465 L 1360 1505" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1060 1505 L 1060 1539 L 1360 1539 L 1360 1505" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1060 1505 L 1360 1505" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1209.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="1209.5" y="1496.5">IWritePatternManager</text></g><path d="M 1060 1509 L 1360 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1064-1518-292-26-0)" font-size="10px"><text x="1065.5" y="1528.5">+insertPattern(int, T, U): bool</text></g><path d="M 290 1505 L 290 1465 L 560 1465 L 560 1505" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 290 1505 L 290 1560 L 560 1560 L 560 1505" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 290 1505 L 560 1505" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="424.5" y="1482.5">&lt;&lt; interface &gt;&gt;</text><text x="424.5" y="1496.5">IWriteRelationshipManager</text></g><path d="M 290 1509 L 560 1509" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-294-1518-262-22-0)" font-size="10px"><text x="295.5" y="1528.5">+insertRelationship(T, U): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-294-1540-262-20-0)" font-size="10px"><text x="295.5" y="1550.5">+setReverse():void</text></g><path d="M 1610 1904 L 1610 1878 L 1800 1878 L 1800 1904" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1610 1904 L 1610 1940 L 1800 1940 L 1800 1904" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1610 1904 L 1800 1904" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1704.5" y="1895.5">EntityManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1614-1909-182-26-0)" font-size="10px"><text x="1615.5" y="1919.5">-std::unordered_set&lt;T&gt; entitiesSet</text></g><path d="M 1610 1934 L 1800 1934" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 80 1904 L 80 1878 L 450 1878 L 450 1904" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 80 1904 L 80 1978 L 450 1978 L 450 1904" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 80 1904 L 450 1904" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="264.5" y="1895.5">RelationshipManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-84-1909-362-26-0)" font-size="10px"><text x="85.5" y="1919.5">#std::unordered_map&lt;T, std::unordered_set&lt;U&gt;&gt; relationshipsMap</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-84-1935-362-26-0)" font-size="10px"><text x="85.5" y="1945.5">#std::unordered_map&lt;U, std::unordered_set&lt;T&gt;&gt; reversedRelationshipsMap</text></g><path d="M 80 1957 L 450 1957" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-84-1963-362-20-0)" font-size="10px"><text x="85.5" y="1973.5">- setReverseHelper(T, U): void</text></g><path d="M 920 1904 L 920 1878 L 1210 1878 L 1210 1904" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 920 1904 L 920 2016 L 1210 2016 L 1210 1904" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 920 1904 L 1210 1904" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1064.5" y="1895.5">PatternManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-924-1909-282-26-0)" font-size="10px"><text x="925.5" y="1919.5">-std::vector&lt;T&gt; lhsVector</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-924-1935-282-26-0)" font-size="10px"><text x="925.5" y="1945.5">-std::vector&lt;U&gt; rhsVector</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-924-1961-282-26-0)" font-size="10px"><text x="925.5" y="1971.5">-std::unordered_map&lt;int, int&gt; indexStmtMap</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-924-1987-282-26-0)" font-size="10px"><text x="925.5" y="1997.5">-std::unordered_map&lt;int, int&gt; reversedIndexStmtMap</text></g><path d="M 920 2012 L 1210 2012" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 840 296 L 840 270 L 1130 270 L 1130 296" fill="#d5e8d4" stroke="#82b366" stroke-miterlimit="10" pointer-events="none"/><path d="M 840 296 L 840 408 L 1130 408 L 1130 296" fill="none" stroke="#82b366" stroke-miterlimit="10" pointer-events="none"/><path d="M 840 296 L 1130 296" fill="none" stroke="#82b366" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="984.5" y="287.5">StorageManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-844-301-282-26-0)" font-size="10px"><text x="845.5" y="311.5">-std::shared_ptr&lt;StorageUtil&gt; storageUtil</text></g><path d="M 840 326 L 1130 326" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-844-335-282-26-0)" font-size="10px"><text x="845.5" y="345.5">+StorageManager()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-844-361-282-26-0)" font-size="10px"><text x="845.5" y="371.5">+getWriteStorage(): std::shared_ptr&lt;WriteStorage&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-844-387-282-26-0)" font-size="10px"><text x="845.5" y="397.5">+getReadStorage(): std::shared_ptr&lt;ReadStorage&gt;</text></g><path d="M 367.5 1350 L 367.5 1380 L 779.25 1380 L 779.3 1460.6" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 772.79 1448.73 L 779.3 1461.72 L 785.79 1448.72" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 367.5 1350 L 367.5 1380 L 1480 1380 L 1480 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1473.5 1450.88 L 1480 1463.88 L 1486.5 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 120 26 L 120 0 L 615 0 L 615 26" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 120 26 L 120 1350 L 615 1350 L 615 26" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 120 26 L 615 26" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="367" y="17.5">StorageUtil</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-31-487-19-0)" font-size="10px"><text x="125.5" y="41.5">-std::shared_ptr&lt;FollowsManager&gt; followsManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-50-487-19-0)" font-size="10px"><text x="125.5" y="60.5">-std::shared_ptr&lt;FollowsTManager&gt; followsTManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-69-487-19-0)" font-size="10px"><text x="125.5" y="79.5">-std::shared_ptr&lt;ParentManager&gt; parentManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-88-487-19-0)" font-size="10px"><text x="125.5" y="98.5">-std::shared_ptr&lt;ParentTManager&gt; parentTManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-107-487-19-0)" font-size="10px"><text x="125.5" y="117.5">-std::shared_ptr&lt;UsesPManager&gt; usesPManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-126-487-19-0)" font-size="10px"><text x="125.5" y="136.5">-std::shared_ptr&lt;UsesSManager&gt; usesSManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-145-487-19-0)" font-size="10px"><text x="125.5" y="155.5">-std::shared_ptr&lt;ModifiesPManager&gt; modifiesPManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-164-487-19-0)" font-size="10px"><text x="125.5" y="174.5">-std::shared_ptr&lt;ModifiesSManager&gt; modifiesSManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-183-487-19-0)" font-size="10px"><text x="125.5" y="193.5">-std::shared_ptr&lt;NextManager&gt; nextManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-202-487-19-0)" font-size="10px"><text x="125.5" y="212.5">-std::shared_ptr&lt;CallsPManager&gt; callsPManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-221-487-19-0)" font-size="10px"><text x="125.5" y="231.5">-std::shared_ptr&lt;CallsSManager&gt; callsSManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-240-487-19-0)" font-size="10px"><text x="125.5" y="250.5">-std::shared_ptr&lt;CallsTManager&gt; callsTManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-259-487-19-0)" font-size="10px"><text x="125.5" y="269.5">-std::shared_ptr&lt;AssignManager&gt; assignManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-278-487-19-0)" font-size="10px"><text x="125.5" y="288.5">-std::shared_ptr&lt;CallStmtNoManager&gt; callStmtNoManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-297-487-19-0)" font-size="10px"><text x="125.5" y="307.5">-std::shared_ptr&lt;CallProcedureManager&gt; callProcedureManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-316-487-19-0)" font-size="10px"><text x="125.5" y="326.5">-std::shared_ptr&lt;ConstantManager&gt; constantManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-335-487-19-0)" font-size="10px"><text x="125.5" y="345.5">-std::shared_ptr&lt;IfManager&gt; ifManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-354-487-19-0)" font-size="10px"><text x="125.5" y="364.5">std::shared_ptr&lt;PrintStmtNoManager&gt; printStmtNoManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-373-487-19-0)" font-size="10px"><text x="125.5" y="383.5">std::shared_ptr&lt;PrintVariableManager&gt; printVariableManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-392-487-19-0)" font-size="10px"><text x="125.5" y="402.5">-std::shared_ptr&lt;ProcedureManager&gt; procedureManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-411-487-19-0)" font-size="10px"><text x="125.5" y="421.5">-std::shared_ptr&lt;ReadStmtNoManager&gt; readStmtNoManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-430-487-19-0)" font-size="10px"><text x="125.5" y="440.5">-std::shared_ptr&lt;ReadVariableManager&gt; readVariableManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-449-487-19-0)" font-size="10px"><text x="125.5" y="459.5">-std::shared_ptr&lt;StmtManager&gt; stmtManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-468-487-19-0)" font-size="10px"><text x="125.5" y="478.5">-std::shared_ptr&lt;VariableManager&gt; variableManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-487-487-19-0)" font-size="10px"><text x="125.5" y="497.5">-std::shared_ptr&lt;WhileManager&gt; whileManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-506-487-19-0)" font-size="10px"><text x="125.5" y="516.5">-std::shared_ptr&lt;AssignPatternManager&gt; assignPatternManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-525-487-19-0)" font-size="10px"><text x="125.5" y="535.5">-std::shared_ptr&lt;IfCondManager&gt; ifCondManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-544-487-19-0)" font-size="10px"><text x="125.5" y="554.5">-std::shared_ptr&lt;WhileCondManager&gt; whileCondManager</text></g><path d="M 120 562 L 615 562" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-571-487-20-0)" font-size="10px"><text x="125.5" y="581.5">+StorageUtil()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-591-487-20-0)" font-size="10px"><text x="125.5" y="601.5">+getFollowsManager(): std::shared_ptr&lt;FollowsManager&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-611-487-20-0)" font-size="10px"><text x="125.5" y="621.5">+getFollowsTManager(): std::shared_ptr&lt;FollowsTManager&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-124-631-487-20-0)" font-size="10px"><text x="125.5" y="641.5">+getParentManager(): std::shared_ptr&lt;ParentManager&gt;</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 653px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;"> +getParentTManager(): std::shared_ptr&lt;ParentTManager&gt;</span></div></div></div></foreignObject><text x="122" y="663" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px"> +getParentTManager(): std::shared_ptr&lt;ParentTManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 673px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getUsesPManager():  std::shared_ptr&lt;UsesPManager&gt;</div></div></div></foreignObject><text x="122" y="683" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getUsesPManager():  std::shared_ptr&lt;UsesPManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 693px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getUsesSManager(): std::shared_ptr&lt;UsesSManager&gt;</div></div></div></foreignObject><text x="122" y="703" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getUsesSManager(): std::shared_ptr&lt;UsesSManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 713px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getModifiesPManager(): std::shared_ptr&lt;ModifiesPManager&gt;</div></div></div></foreignObject><text x="122" y="723" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getModifiesPManager(): std::shared_ptr&lt;ModifiesPManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 733px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getModifiesSManager(): std::shared_ptr&lt;ModifiesSManager&gt;</span></div></div></div></foreignObject><text x="122" y="743" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getModifiesSManager(): std::shared_ptr&lt;ModifiesSManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 753px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getNextManager(): std::shared_ptr&lt;NextManager&gt;<br /></span></div></div></div></foreignObject><text x="122" y="763" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getNextManager(): std::shared_ptr&lt;NextManager&gt;&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 773px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getCallsPManager(): std::shared_ptr&lt;CallsPManager&gt;<br /></span></div></div></div></foreignObject><text x="122" y="783" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsPManager(): std::shared_ptr&lt;CallsPManager&gt;&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 793px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getCallsSManager(): std::shared_ptr&lt;CallsSManager&gt;<br /></span></div></div></div></foreignObject><text x="122" y="803" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsSManager(): std::shared_ptr&lt;CallsSManager&gt;&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 813px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><span style="color: rgb(0, 0, 0); font-family: Helvetica; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(251, 251, 251); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;">+getCallsTManager(): std::shared_ptr&lt;CallsTManager&gt;<br /></span></div></div></div></foreignObject><text x="122" y="823" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallsTManager(): std::shared_ptr&lt;CallsTManager&gt;&#xa;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 833px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getAssignManager(): std::shared_ptr&lt;AssignManager&gt;</div></div></div></foreignObject><text x="122" y="843" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAssignManager(): std::shared_ptr&lt;AssignManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 853px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallProcedureManager<span style="background-color: initial;">(): std::shared_ptr&lt;CallProcedureManager&gt;</span></div></div></div></foreignObject><text x="122" y="863" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallProcedureManager(): std::shared_ptr&lt;CallProcedureManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 873px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getCallStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;CallStmtNoManager&gt;</span></div></div></div></foreignObject><text x="122" y="883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getCallStmtNoManager(): std::shared_ptr&lt;CallStmtNoManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 893px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getConstantManager(): std::shared_ptr&lt;ConstantManager&gt;</div></div></div></foreignObject><text x="122" y="903" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getConstantManager(): std::shared_ptr&lt;ConstantManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 913px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getIfManager(): std::shared_ptr&lt;IfManager&gt;</div></div></div></foreignObject><text x="122" y="923" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getIfManager(): std::shared_ptr&lt;IfManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 933px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getPrintStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;PrintStmtNoManager&gt;</span></div></div></div></foreignObject><text x="122" y="943" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getPrintStmtNoManager(): std::shared_ptr&lt;PrintStmtNoManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 953px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+PrintVariableManager<span style="background-color: initial;">(): std::shared_ptr&lt;PrintVariableManager&gt;</span></div></div></div></foreignObject><text x="122" y="963" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+PrintVariableManager(): std::shared_ptr&lt;PrintVariableManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 973px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getProcedureManager(): std::shared_ptr&lt;ProcedureManager&gt;</div></div></div></foreignObject><text x="122" y="983" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getProcedureManager(): std::shared_ptr&lt;ProcedureManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 993px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getReadStmtNoManager<span style="background-color: initial;">(): std::shared_ptr&lt;ReadStmtNoManager&gt;</span></div></div></div></foreignObject><text x="122" y="1003" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getReadStmtNoManager(): std::shared_ptr&lt;ReadStmtNoManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1013px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getReadVariableManager(): std::shared_ptr&lt;ReadVariableManager&gt;</div></div></div></foreignObject><text x="122" y="1023" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getReadVariableManager(): std::shared_ptr&lt;ReadVariableManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1033px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getStmtManager(): std::shared_ptr&lt;StmtManager&gt;</div></div></div></foreignObject><text x="122" y="1043" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getStmtManager(): std::shared_ptr&lt;StmtManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1053px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getVariableManager(): std::shared_ptr&lt;VariableManager&gt;</div></div></div></foreignObject><text x="122" y="1063" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getVariableManager(): std::shared_ptr&lt;VariableManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1073px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getWhileManager(): std::shared_ptr&lt;WhileManager&gt;</div></div></div></foreignObject><text x="122" y="1083" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getWhileManager(): std::shared_ptr&lt;WhileManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1093px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getAssignPatternManager<span style="background-color: initial;">(): std::shared_ptr&lt;AssignPatternManager&gt;</span></div></div></div></foreignObject><text x="122" y="1103" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAssignPatternManager(): std::shared_ptr&lt;AssignPatternManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1113px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getIfCondManager<span style="background-color: initial;">(): std::shared_ptr&lt;IfCondManager&gt;</span></div></div></div></foreignObject><text x="122" y="1123" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getIfCondManager(): std::shared_ptr&lt;IfCondManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1133px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">+getWhileCondManager<span style="background-color: initial;">(): std::shared_ptr&lt;WhileCondManager&gt;</span></div></div></div></foreignObject><text x="122" y="1143" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getWhileCondManager(): std::shared_ptr&lt;WhileCondManager&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1153px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+getRelationshipMap<span style="background-color: initial;">(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;<br />): </span>std::unordered_map&lt;T, std::unordered_set&lt;U&gt;&gt;</u></div></div></div></foreignObject><text x="122" y="1163" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getRelationshipMap(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;...</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1187px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;">getReverseRelationshipMap(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;<br />): </span>std::unordered_map&lt;T, std::unordered_set&lt;U&gt;&gt;</u></div></div></div></foreignObject><text x="122" y="1197" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getReverseRelationshipMap(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;...</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1221px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+isRelationEmpty<span style="background-color: initial;"><span style="background-color: initial;">(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;</span></span><span style="background-color: initial;">): bool</span></u></div></div></div></foreignObject><text x="122" y="1231" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+isRelationEmpty(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;): bool</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1237px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;"><span style="background-color: initial;">relationContains(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;</span></span><span style="background-color: initial;">): bool</span></u></div></div></div></foreignObject><text x="122" y="1247" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+relationContains(std::shared_ptr&lt;IReadRelationshipManager&lt;T, U&gt;&gt;): bool</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1257px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;"><span style="background-color: initial;">getEntityValues(</span></span><span style="background-color: initial;">std::shared_ptr&lt;IReadEntityManager&lt;T&gt;&gt;): </span>std::unordered_set&lt;T&gt;</u></div></div></div></foreignObject><text x="122" y="1267" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getEntityValues(std::shared_ptr&lt;IReadEntityManager&lt;T&gt;&gt;): std::unordered_set&lt;T&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1277px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;"><span style="background-color: initial;">getAllPatternEntries(</span></span><span style="background-color: initial;">std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): </span>std::unordered_map&lt;int, int&gt;</u></div></div></div></foreignObject><text x="122" y="1287" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAllPatternEntries(std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): std::unordered_map&lt;int, int&gt;</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1297px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;"><span style="background-color: initial;">getAllLhsPatternEntries(</span></span><span style="background-color: initial;">std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): </span>std::unique_ptr&lt;std::vector&lt;T&gt;&gt;</u></div></div></div></foreignObject><text x="122" y="1307" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAllLhsPatternEntries(std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): std::unique_ptr&lt;std::vector&lt;T...</text></switch></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 493px; height: 1px; padding-top: 1317px; margin-left: 122px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 10px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;"><u>+<span style="background-color: initial;"><span style="background-color: initial;">getAllRhsPatternEntries(</span></span><span style="background-color: initial;">std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): </span>std::unique_ptr&lt;std::vector&lt;std::shared_ptr&lt;ShuntNode&gt;&gt;&gt;</u></div></div></div></foreignObject><text x="122" y="1327" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="10px">+getAllRhsPatternEntries(std::shared_ptr&lt;IReadPatternManager&lt;T, U&gt;&gt;): std::unique_ptr&lt;std::vector&lt;s...</text></switch></g><path d="M 20 2116 L 20 2090 L 180 2090 L 180 2116" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2116 L 20 2130 L 180 2130 L 180 2116" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2116 L 180 2116" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2107.5">UsesSManager</text></g><path d="M 20 2120 L 180 2120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><rect x="170" y="1450" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1465px; margin-left: 171px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="205" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><rect x="480" y="1450" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1465px; margin-left: 481px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="515" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><rect x="1592" y="1450" width="48" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 46px; height: 1px; padding-top: 1465px; margin-left: 1593px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T</div></div></div></foreignObject><text x="1616" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T</text></switch></g><rect x="1750" y="1864" width="40" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 1879px; margin-left: 1751px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T</div></div></div></foreignObject><text x="1770" y="1883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T</text></switch></g><rect x="1880" y="1450" width="48" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 46px; height: 1px; padding-top: 1465px; margin-left: 1881px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T</div></div></div></foreignObject><text x="1904" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T</text></switch></g><rect x="330" y="1864" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1879px; margin-left: 331px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="365" y="1883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><path d="M 200 1874 L 200 1784 L 121 1784 L 121 1718.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 121 1705.12 L 127.5 1718.12 L 114.5 1718.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 309 1878 L 309 1784 L 425 1784 L 425 1574.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 425 1561.12 L 431.5 1574.12 L 418.5 1574.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1649 1878 L 1649 1784 L 1540 1784 L 1540 1609.48" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1540 1596.48 L 1546.5 1609.48 L 1533.5 1609.48 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1720 1878 L 1720 1784 L 1830 1784 L 1830 1558.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1830 1545.12 L 1836.5 1558.12 L 1823.5 1558.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1077.18 1877.31 L 1077 1780 L 1210 1780 L 1210 1710 L 1210 1553.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1210 1540.12 L 1216.5 1553.12 L 1203.5 1553.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 970 1874 L 970 1854 L 840 1854 L 839.95 1838.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 839.9 1825.13 L 846.45 1838.11 L 833.45 1838.15 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 408 L 985 527.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 978.5 515.88 L 985 528.88 L 991.5 515.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2176 L 20 2150 L 180 2150 L 180 2176" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2176 L 20 2190 L 180 2190 L 180 2176" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2176 L 180 2176" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2167.5">FollowsManager</text></g><path d="M 20 2180 L 180 2180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2230 L 360 2230" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2236 L 20 2210 L 180 2210 L 180 2236" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2236 L 20 2250 L 180 2250 L 180 2236" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2236 L 180 2236" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2227.5">FollowsTManager</text></g><path d="M 20 2240 L 180 2240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2116 L 360 2090 L 520 2090 L 520 2116" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2116 L 360 2130 L 520 2130 L 520 2116" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2116 L 520 2116" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2107.5">ModifiesSManager</text></g><path d="M 360 2120 L 520 2120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2176 L 360 2150 L 520 2150 L 520 2176" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2176 L 360 2190 L 520 2190 L 520 2176" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2176 L 520 2176" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2167.5">ParentManager</text></g><path d="M 360 2180 L 520 2180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2236 L 360 2210 L 520 2210 L 520 2236" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2236 L 360 2250 L 520 2250 L 520 2236" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2236 L 520 2236" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2227.5">ParentTManager</text></g><path d="M 360 2240 L 520 2240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2056 L 20 2030 L 180 2030 L 180 2056" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2056 L 20 2070 L 180 2070 L 180 2056" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2056 L 180 2056" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2047.5">UsesPManager</text></g><path d="M 20 2060 L 180 2060" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2056 L 360 2030 L 520 2030 L 520 2056" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2056 L 360 2070 L 520 2070 L 520 2056" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2056 L 520 2056" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2047.5">ModifiesPManager</text></g><path d="M 360 2060 L 520 2060" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 265 2410 L 265 1996.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 265 1979.12 L 273.5 1996.12 L 256.5 1996.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2169.83 L 360 2169.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2109.83 L 360 2109.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2049.83 L 360 2049.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2056 L 1795 2030 L 1955 2030 L 1955 2056" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2056 L 1795 2070 L 1955 2070 L 1955 2056" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2056 L 1955 2056" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2047.5">ConstantManager</text></g><path d="M 1795 2060 L 1955 2060" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2236 L 1455 2210 L 1615 2210 L 1615 2236" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2236 L 1455 2250 L 1615 2250 L 1615 2236" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2236 L 1615 2236" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2227.5">PrintStmtNoManager</text></g><path d="M 1455 2240 L 1615 2240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2296 L 1455 2270 L 1615 2270 L 1615 2296" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2296 L 1455 2310 L 1615 2310 L 1615 2296" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2296 L 1615 2296" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2287.5">ReadStmtNoManager</text></g><path d="M 1455 2300 L 1615 2300" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2176 L 1795 2150 L 1955 2150 L 1955 2176" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2176 L 1795 2190 L 1955 2190 L 1955 2176" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2176 L 1955 2176" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2167.5">IfManager</text></g><path d="M 1795 2180 L 1955 2180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2356 L 1455 2330 L 1615 2330 L 1615 2356" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2356 L 1455 2370 L 1615 2370 L 1615 2356" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2356 L 1615 2356" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2347.5">ProcedureManager</text></g><path d="M 1455 2360 L 1615 2360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2356 L 1795 2330 L 1955 2330 L 1955 2356" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2356 L 1795 2370 L 1955 2370 L 1955 2356" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2356 L 1955 2356" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2347.5">StmtManager</text></g><path d="M 1795 2360 L 1955 2360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2056 L 1455 2030 L 1615 2030 L 1615 2056" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2056 L 1455 2070 L 1615 2070 L 1615 2056" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2056 L 1615 2056" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2047.5">AssignManager</text></g><path d="M 1455 2060 L 1615 2060" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2169.83 L 1795 2169.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2109.83 L 1795 2109.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2049.83 L 1795 2049.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1625 2416 L 1625 2390 L 1785 2390 L 1785 2416" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1625 2416 L 1625 2430 L 1785 2430 L 1785 2416" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1625 2416 L 1785 2416" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1704.5" y="2407.5">VariableManager</text></g><path d="M 1625 2420 L 1785 2420" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2176 L 1455 2150 L 1615 2150 L 1615 2176" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2176 L 1455 2190 L 1615 2190 L 1615 2176" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2176 L 1615 2176" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2167.5">WhileManager</text></g><path d="M 1455 2180 L 1615 2180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1705 2390 L 1705 1958.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1705 1941.12 L 1713.5 1958.12 L 1696.5 1958.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2296 L 20 2270 L 180 2270 L 180 2296" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2296 L 20 2310 L 180 2310 L 180 2296" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2296 L 180 2296" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2287.5">CallsSManager</text></g><path d="M 20 2300 L 180 2300" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2356 L 20 2330 L 180 2330 L 180 2356" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2356 L 20 2370 L 180 2370 L 180 2356" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2356 L 180 2356" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2347.5">CallsTManager</text></g><path d="M 20 2360 L 180 2360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2296 L 360 2270 L 520 2270 L 520 2296" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2296 L 360 2310 L 520 2310 L 520 2296" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2296 L 520 2296" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2287.5">CallsPManager</text></g><path d="M 360 2300 L 520 2300" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2356 L 360 2330 L 520 2330 L 520 2356" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2356 L 360 2370 L 520 2370 L 520 2356" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2356 L 520 2356" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2347.5">NextManager</text></g><path d="M 360 2360 L 520 2360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2410 L 360 2410" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2416 L 20 2390 L 180 2390 L 180 2416" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2416 L 20 2430 L 180 2430 L 180 2416" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 20 2416 L 180 2416" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="99.5" y="2407.5">IfCondManager</text></g><path d="M 20 2420 L 180 2420" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2416 L 360 2390 L 520 2390 L 520 2416" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2416 L 360 2430 L 520 2430 L 520 2416" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 360 2416 L 520 2416" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="439.5" y="2407.5">WhileCondManager</text></g><path d="M 360 2420 L 520 2420" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2289.66 L 360 2289.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 180 2349.66 L 360 2349.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 2116 L 985 2090 L 1145 2090 L 1145 2116" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 2116 L 985 2130 L 1145 2130 L 1145 2116" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 985 2116 L 1145 2116" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1064.5" y="2107.5">AssignPatternManager</text></g><path d="M 985 2120 L 1145 2120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1060 2090 L 1060 2034.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1060 2017.12 L 1068.5 2034.12 L 1051.5 2034.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2116 L 1795 2090 L 1955 2090 L 1955 2116" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2116 L 1795 2130 L 1955 2130 L 1955 2116" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2116 L 1955 2116" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2107.5">CallStmtNoManager</text></g><path d="M 1795 2120 L 1955 2120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2116 L 1455 2090 L 1615 2090 L 1615 2116" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2116 L 1455 2130 L 1615 2130 L 1615 2116" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1455 2116 L 1615 2116" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1534.5" y="2107.5">CallProcedureManager</text></g><path d="M 1455 2120 L 1615 2120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2236 L 1795 2210 L 1955 2210 L 1955 2236" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2236 L 1795 2250 L 1955 2250 L 1955 2236" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2236 L 1955 2236" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2227.5">PrintVariableManager</text></g><path d="M 1795 2240 L 1955 2240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2296 L 1795 2270 L 1955 2270 L 1955 2296" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2296 L 1795 2310 L 1955 2310 L 1955 2296" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1795 2296 L 1955 2296" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1874.5" y="2287.5">ReadVariableManager</text></g><path d="M 1795 2300 L 1955 2300" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2229.66 L 1795 2229.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2289.66 L 1795 2289.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1615 2349.66 L 1795 2349.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><rect x="930" y="1450" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1465px; margin-left: 931px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="965" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><rect x="1280" y="1450" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1465px; margin-left: 1281px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="1315" y="1469" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><rect x="1120" y="1864" width="70" height="30" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 68px; height: 1px; padding-top: 1879px; margin-left: 1121px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">T, U</div></div></div></foreignObject><text x="1155" y="1883" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">T, U</text></switch></g><path d="M 840 343 L 727.5 343 L 727.5 491.5 L 621.37 491.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 616.12 491.5 L 623.12 488 L 621.37 491.5 L 623.12 495 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 760 853 L 687.5 853 L 687.5 816 L 621.37 816" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 616.12 816 L 623.12 812.5 L 621.37 816 L 623.12 819.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><rect x="1050" y="480" width="150" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-dasharray="3 3" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 510px; margin-left: 1051px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">RelationshipReadOrWrite,<br />EntityReadOrWrite,<br />PatternReadOrWrite</div></div></div></foreignObject><text x="1125" y="514" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">RelationshipReadOrWrite,...</text></switch></g><path d="M 367.5 1350 L 367.5 1380 L 62.5 1380 L 62.5 1462.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 56 1450.88 L 62.5 1463.88 L 69 1450.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>