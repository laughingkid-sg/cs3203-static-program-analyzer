<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="3252px" height="3996px" viewBox="-0.5 -0.5 3252 3996" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2023-04-09T09:40:57.735Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36&quot; etag=&quot;AE0FQue_c0UWF_iJdtt-&quot; version=&quot;21.1.5&quot; type=&quot;google&quot; pages=&quot;2&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;diagram id=&quot;31G8l_oV4Krx6JWmm0dK&quot; name=&quot;Page-2&quot;&gt;7V3ZcuI6EP0aqnJvFVPegcdgst2QldkyLylhBHhiLGKLBPL1V/KCt8Z4BrMkcdVMJZIlW+4+3TrqlpWarE/mZw6ajq/IAFs1SRg55qAmd2qSJLL/rGKKRjhRwVv0zLewUghqZ+YAu4mGlBCLmtNkpUFsGxs0UYcch7wmmw2JlR1Gz0AWztT+MAd07Nc2pUZUf47N0Th4kNqU/QsTFLYNxu2O0YC8xqrkk5qsO4RQ/7fJXMcWF0woFr/f6Yqry3E52KaFOhjKdf9u+m1ozJyX62935mLo1MVgtC5dhC+MB+z9gyJx6JiMiI2sk6i27ZCZPcD8tgIrRW26hExZpcgqf2NKF4Hu0IwSVjWmEyu4iu1Qr6LkF4+5YvgDp9j2a05NywqekH3T4OVdMnOMYNht0nWl+57y+ji/1/9rLTrX9VE9xAdyRjjo+nKm/9f7KUwfJvL5y70zeJGGN2E7/uqxBwRyPMNkgqmzYA0cbCFqviShgQJAjZbtgq7spdAi1mBKTJu6sTvf8grWYO5fl4RGgJVF8ACpJSV1uraH0lDjPdgv/ijCUux1oioPKX+CGmVPqMmFSQpVpaKmiW/Y0O5+3gyPhXttet4V3NkHQo3aapSKmjyxviBrFoiiJmkW9VQV/hTYQLEzREw/3J1po+By+LMmySLX9UWPTujJnDrIoMTJoNF9NScWsjnshsSmITB5T2SZI4adjoH5k1jFC3aoyfz9cXCBcji2jbFpDbpoQWYcAS5FxlNYao+JY76x26IQmeyyQwPsKUKiRY/3DB7tYJe1uQ0RKS6rusilQRuDWBaaumbfGzBvMmEwNO02oZRMwhslTGk5sXgF6pCn5UzF+7+OTYp7U+RB/pXNwFwozGp0YjHJcXHJWByouLHsHbvS0hoy0vKsiYsPz3PxH15tiCnYia2g4jWaWWUhqBvHZlVJUNZYzWR+zyZ7ZI8sHD1RTj1QbWafJ2rQ87Tk45DFsGIjittc8m7KVkqxDgmwjhSqLdNDdMwlZrUdwtvCQwqAe2IOBp43dhkgTHv01fO9dTGq6XodO3JUcx/IRfaQRxFF/aU1WaiPrVvimtQk/P6O37YdOC02bLVdUztejUN1YrMRI9ODEGagf8UuBcGV60DWIy7Qt1IQXs3V4EqoOU+nyu2lLHd+P8pdve7MH+sPz3XQ47VrulQ7FrDvu+4xGhy5lN3kmP1jluzgweOUOqFH5NevGWGOXKBgs+I/GWwwidD16vd9W1LTSlbTvIqwvkPL8ytjBhpvvk1rP6nlNpOsLnxRub4lnZXFqLw/CDQLehhtcwwg+fpiKgvOtXhRN9zO8+Pp3C6AgVuHSSMPBF6DCgUboKCh7A4Fzqn5A7ew3h/0Xht6dzab2M8FUKAjy8oDAb9eYWADDIhCUbKxLRAoa0FwMcyDwMWwAsAmAAgVuzcAyGsB8IMtO3AeBrwGFQw2gYEq7RkGENXnegwwcOy6TDd5IPBbVCjYBAWNHRJDOIiWXeDtNojWtwgPTZQQRUMYXx7PFtYv/e1OtIf6eR9LIcrjUbQ81ZUXRStM13NGHbPNe++5DJ5jc3qQESdJO7CI04FElxS5oImHYYIPEVwCUQ0Rj88bXMo1/MIzSFE2WUJwSX+yr+7eztw66Xav3i6cxSVjEdqepw8wBzNA7ti7P5DmKzSVvEndX19v1Nl311A0ufe86OvfoYQMPKWWPZX8VUJG1DLplUYqNbu2R0PO7yEp2sY9JK3cVGGe6mKe58SmJl1UM+nhzqRaq5maSTVgySRCU5uYw5bf3VQKAhoK4nzeqTTX5jeaSiF4lTCVwgMWMkqtl5Om8W6SAcjHW5SXgwMZCNODbqaENTk84ux0Va9yNbsFgQaE6XcLgmwMIAmCjQJ0lUf4EzA0C84M2wNDdulcj0K1Vb5mi7oXQ0Pcn/KzZK9epWt2jAIoirctFCzubtXxuT6+Ip3m8ME6VwzxBljCxjxAlbbftv61HZJCMNCWq3++D/XI4DLx1LkSB7xdhYNNcADtFd0WDuDooppR1ntN2OV9BPFOoqySksn3KEJKx5vFM/OElMgPhmv/KpBZKxjI7AtYxhoUyBRwU2g2ywlkMgaZSQlmnYjUBJxI6Gw+RBwTBHJ2kZsB8CeKY+ba+iZxTBBdJcQxwQHD+8skIXRRR74HdRkXuWC2O+eze5y1UIeJ37uBc40mnyhYUY76gfAlqP4yGAo4YniDKZuqeQ3zJkfpz6Y0NJn6ZBSHlZ+BkZajbiBQuTV1w0Rs31sAyiOked9XvltCWvZXlXlCitl8LAVRMdJDZ6QqsBsZ5gw5pOHdMVIQyRUjjWMr19gPkZGCA17FSJc+qqKkW9X/LikpOOKKku5S3funpFnT3P15MulNqJsfLpNHO3f/gcPf0VNBSVGP8ESl1ceErOmxpcNlsh6j0UZ913MGtUYndgpIlFQ5HKIrtyqiy7HTEpPYEVtAHlcBfJOoroP+e2K6IMQhpttOsCBGfjyiE2YWPcP8YJNgDooD377CP+d5jeLMqFUMjlubKldRYw6Cr4sp5hiQhF5Y+iy8txztBp827E+71Tbx8pUaTinrlFrCYhYcsLrCYkMaAq9llxYcmfbnWcWWpPh9+2oN1Ly/E/DPFrJCmsxWECh4eMcOPTr5dja/uEHD/u/pbDH+hqjUeAPWJUu9fol/JkLHpltfqt/b7BVsBxs6ZPLILx/9kw1pJNkQdGhfbKIog6FnQtGammXocPQgZ3PERjvtsryY75FLCXNpcP9yUe5fkNnP5bRmNuomytIOBbmn81nZ0H/WwiQgKzzwwhdmuUG5M49f7SxWU/xaJgSTF12Mh2DybHf3Z0yA2tnTPkJYO6UoJ2/fbFw5eVZ/IMppAFO9v4W3H+7d/W4yguxN8cGptaf9aFvv3r1RM+XWoZNuGoBXl7fljJrrJcrYhOFgigPJugcqWq2RFK0iZ9NrIrQneWuyBb5cXSncEwtP+NsfomwlIQ1bRQQm0d3KForQfAjZqsDBuDuWLRQfScn2fclUBD5V3LFMofhEGq+WeagiFVtyekECHNu6Y5FCC39fdjyvlBCY9jwj4YW669EwHsAVhencE1B4fSlw9eTYMPCUIts77f4KM043iKnGf8IK7QRxgpgK1ia2lsFCL+m0cvnPV/icPrpBRrWWThXZxE+sxfJKQVUZhrU8pnX5/R/wAZgobQkFg37z6Wl8Sc++nv2Q7d+XV0/tK/Dw3jSBj7LMhoVc1zSSykkaE56b9GfEvlnpIXYlIuK8sJaHp3hzkpiD7yPBGojJVwXEG9b9WZoayCpnPsoQU4rzXyDoF+kue2xSM4OV9Hcb/uIjc6u/SOStlmQCGYzBUn/Hkm/PbgHLLWpexS0c8tZJCJbhsDNLDQU4YlmUyzFVVoz+VpKvv+ivSckn/wM=&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-2822-49-424-26-0"><rect x="2822" y="49" width="424" height="26"/></clipPath><clipPath id="mx-clip-2822-83-424-26-0"><rect x="2822" y="83" width="424" height="26"/></clipPath><clipPath id="mx-clip-2822-109-424-26-0"><rect x="2822" y="109" width="424" height="26"/></clipPath><clipPath id="mx-clip-2822-135-424-26-0"><rect x="2822" y="135" width="424" height="26"/></clipPath><clipPath id="mx-clip-2822-161-424-26-0"><rect x="2822" y="161" width="424" height="26"/></clipPath><clipPath id="mx-clip-2822-187-424-26-0"><rect x="2822" y="187" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-316-424-26-0"><rect x="2155" y="316" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-342-424-26-0"><rect x="2155" y="342" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-376-424-26-0"><rect x="2155" y="376" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-402-424-26-0"><rect x="2155" y="402" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-428-424-26-0"><rect x="2155" y="428" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-454-424-26-0"><rect x="2155" y="454" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-480-424-26-0"><rect x="2155" y="480" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-506-424-26-0"><rect x="2155" y="506" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-532-424-26-0"><rect x="2155" y="532" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-558-424-26-0"><rect x="2155" y="558" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-584-424-26-0"><rect x="2155" y="584" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-610-424-26-0"><rect x="2155" y="610" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-636-424-26-0"><rect x="2155" y="636" width="424" height="26"/></clipPath><clipPath id="mx-clip-2155-662-424-26-0"><rect x="2155" y="662" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1397-424-26-0"><rect x="1923" y="1397" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1637-424-26-0"><rect x="1923" y="1637" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1757-424-26-0"><rect x="1923" y="1757" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1517-424-26-0"><rect x="1923" y="1517" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1877-424-26-0"><rect x="1923" y="1877" width="424" height="26"/></clipPath><clipPath id="mx-clip-1923-1987-424-26-0"><rect x="1923" y="1987" width="424" height="26"/></clipPath><clipPath id="mx-clip-1445-316-414-26-0"><rect x="1445" y="316" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-342-414-26-0"><rect x="1445" y="342" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-368-414-26-0"><rect x="1445" y="368" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-394-414-26-0"><rect x="1445" y="394" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-420-414-26-0"><rect x="1445" y="420" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-446-414-26-0"><rect x="1445" y="446" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-472-414-26-0"><rect x="1445" y="472" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-498-414-26-0"><rect x="1445" y="498" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-524-414-26-0"><rect x="1445" y="524" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-550-414-26-0"><rect x="1445" y="550" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-576-414-26-0"><rect x="1445" y="576" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-602-414-26-0"><rect x="1445" y="602" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-636-414-26-0"><rect x="1445" y="636" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-662-414-26-0"><rect x="1445" y="662" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-688-414-26-0"><rect x="1445" y="688" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-714-414-26-0"><rect x="1445" y="714" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-740-414-26-0"><rect x="1445" y="740" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-766-414-26-0"><rect x="1445" y="766" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-792-414-26-0"><rect x="1445" y="792" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-818-414-26-0"><rect x="1445" y="818" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-844-414-26-0"><rect x="1445" y="844" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-870-414-26-0"><rect x="1445" y="870" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-896-414-26-0"><rect x="1445" y="896" width="414" height="26"/></clipPath><clipPath id="mx-clip-1445-922-414-26-0"><rect x="1445" y="922" width="414" height="26"/></clipPath><clipPath id="mx-clip-2805-460-424-26-0"><rect x="2805" y="460" width="424" height="26"/></clipPath><clipPath id="mx-clip-2805-486-424-26-0"><rect x="2805" y="486" width="424" height="26"/></clipPath><clipPath id="mx-clip-2805-520-424-26-0"><rect x="2805" y="520" width="424" height="26"/></clipPath><clipPath id="mx-clip-2805-546-424-26-0"><rect x="2805" y="546" width="424" height="26"/></clipPath><clipPath id="mx-clip-835-1262-422-26-0"><rect x="835" y="1262" width="422" height="26"/></clipPath><clipPath id="mx-clip-835-1288-422-26-0"><rect x="835" y="1288" width="422" height="26"/></clipPath><clipPath id="mx-clip-835-1314-422-26-0"><rect x="835" y="1314" width="422" height="26"/></clipPath><clipPath id="mx-clip-766-125-424-26-0"><rect x="766" y="125" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-151-424-26-0"><rect x="766" y="151" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-177-424-26-0"><rect x="766" y="177" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-203-424-26-0"><rect x="766" y="203" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-229-424-26-0"><rect x="766" y="229" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-255-424-26-0"><rect x="766" y="255" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-281-424-26-0"><rect x="766" y="281" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-307-424-26-0"><rect x="766" y="307" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-333-424-26-0"><rect x="766" y="333" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-359-424-26-0"><rect x="766" y="359" width="424" height="26"/></clipPath><clipPath id="mx-clip-766-385-424-26-0"><rect x="766" y="385" width="424" height="26"/></clipPath><clipPath id="mx-clip-734-1435-624-26-0"><rect x="734" y="1435" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1461-624-26-0"><rect x="734" y="1461" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1487-624-26-0"><rect x="734" y="1487" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1521-624-26-0"><rect x="734" y="1521" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1547-624-26-0"><rect x="734" y="1547" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1573-624-26-0"><rect x="734" y="1573" width="624" height="26"/></clipPath><clipPath id="mx-clip-734-1599-624-26-0"><rect x="734" y="1599" width="624" height="26"/></clipPath><clipPath id="mx-clip-768-474-422-26-0"><rect x="768" y="474" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-500-422-26-0"><rect x="768" y="500" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-526-422-26-0"><rect x="768" y="526" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-552-422-26-0"><rect x="768" y="552" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-578-422-26-0"><rect x="768" y="578" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-604-422-26-0"><rect x="768" y="604" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-630-422-26-0"><rect x="768" y="630" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-656-422-26-0"><rect x="768" y="656" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-682-422-26-0"><rect x="768" y="682" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-708-422-26-0"><rect x="768" y="708" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-742-422-26-0"><rect x="768" y="742" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-768-422-26-0"><rect x="768" y="768" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-794-422-26-0"><rect x="768" y="794" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-820-422-26-0"><rect x="768" y="820" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-846-422-26-0"><rect x="768" y="846" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-872-422-26-0"><rect x="768" y="872" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-898-422-26-0"><rect x="768" y="898" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-924-422-26-0"><rect x="768" y="924" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-950-422-26-0"><rect x="768" y="950" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-976-422-26-0"><rect x="768" y="976" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-1002-422-26-0"><rect x="768" y="1002" width="422" height="26"/></clipPath><clipPath id="mx-clip-768-1028-422-26-0"><rect x="768" y="1028" width="422" height="26"/></clipPath><clipPath id="mx-clip-18-964-672-26-0"><rect x="18" y="964" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-990-672-26-0"><rect x="18" y="990" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1016-672-26-0"><rect x="18" y="1016" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1042-672-26-0"><rect x="18" y="1042" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1068-672-26-0"><rect x="18" y="1068" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1094-672-26-0"><rect x="18" y="1094" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1120-672-26-0"><rect x="18" y="1120" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1146-672-26-0"><rect x="18" y="1146" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1172-672-26-0"><rect x="18" y="1172" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1198-672-26-0"><rect x="18" y="1198" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1224-672-26-0"><rect x="18" y="1224" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1250-672-26-0"><rect x="18" y="1250" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1276-672-26-0"><rect x="18" y="1276" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1310-672-26-0"><rect x="18" y="1310" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1336-672-26-0"><rect x="18" y="1336" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1362-672-26-0"><rect x="18" y="1362" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1388-672-26-0"><rect x="18" y="1388" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1414-672-26-0"><rect x="18" y="1414" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1440-672-26-0"><rect x="18" y="1440" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1466-672-26-0"><rect x="18" y="1466" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1492-672-26-0"><rect x="18" y="1492" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1518-672-26-0"><rect x="18" y="1518" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1544-672-26-0"><rect x="18" y="1544" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1570-672-26-0"><rect x="18" y="1570" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1596-672-26-0"><rect x="18" y="1596" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1622-672-26-0"><rect x="18" y="1622" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1648-672-26-0"><rect x="18" y="1648" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1674-672-26-0"><rect x="18" y="1674" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1700-672-26-0"><rect x="18" y="1700" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1726-672-26-0"><rect x="18" y="1726" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1752-672-26-0"><rect x="18" y="1752" width="672" height="26"/></clipPath><clipPath id="mx-clip-18-1778-672-26-0"><rect x="18" y="1778" width="672" height="26"/></clipPath><clipPath id="mx-clip-49-1906-547-26-0"><rect x="49" y="1906" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-1932-547-26-0"><rect x="49" y="1932" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-1958-547-26-0"><rect x="49" y="1958" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-1992-547-26-0"><rect x="49" y="1992" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2018-547-26-0"><rect x="49" y="2018" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2044-547-26-0"><rect x="49" y="2044" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2070-547-26-0"><rect x="49" y="2070" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2096-547-26-0"><rect x="49" y="2096" width="547" height="26"/></clipPath><clipPath id="mx-clip-1807-2076-424-26-0"><rect x="1807" y="2076" width="424" height="26"/></clipPath><clipPath id="mx-clip-1119-1999-512-26-0"><rect x="1119" y="1999" width="512" height="26"/></clipPath><clipPath id="mx-clip-1119-2025-512-26-0"><rect x="1119" y="2025" width="512" height="26"/></clipPath><clipPath id="mx-clip-1119-2051-512-26-0"><rect x="1119" y="2051" width="512" height="26"/></clipPath><clipPath id="mx-clip-1119-2085-512-26-0"><rect x="1119" y="2085" width="512" height="26"/></clipPath><clipPath id="mx-clip-1119-2111-512-26-0"><rect x="1119" y="2111" width="512" height="26"/></clipPath><clipPath id="mx-clip-1749-2534-424-26-0"><rect x="1749" y="2534" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2560-424-26-0"><rect x="1749" y="2560" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2586-424-26-0"><rect x="1749" y="2586" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2620-424-26-0"><rect x="1749" y="2620" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2646-424-26-0"><rect x="1749" y="2646" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2672-424-26-0"><rect x="1749" y="2672" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2698-424-26-0"><rect x="1749" y="2698" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2724-424-26-0"><rect x="1749" y="2724" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2750-424-26-0"><rect x="1749" y="2750" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2776-424-26-0"><rect x="1749" y="2776" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2802-424-26-0"><rect x="1749" y="2802" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2828-424-26-0"><rect x="1749" y="2828" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2854-424-26-0"><rect x="1749" y="2854" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2880-424-26-0"><rect x="1749" y="2880" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2906-424-26-0"><rect x="1749" y="2906" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2932-424-26-0"><rect x="1749" y="2932" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2220-424-26-0"><rect x="2249" y="2220" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2246-424-26-0"><rect x="2249" y="2246" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2280-424-26-0"><rect x="2249" y="2280" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2306-424-26-0"><rect x="2249" y="2306" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2534-424-26-0"><rect x="2249" y="2534" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2560-424-26-0"><rect x="2249" y="2560" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2586-424-26-0"><rect x="2249" y="2586" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2612-424-26-0"><rect x="2249" y="2612" width="424" height="26"/></clipPath><clipPath id="mx-clip-2249-2638-424-26-0"><rect x="2249" y="2638" width="424" height="26"/></clipPath><clipPath id="mx-clip-2729-2378-424-26-0"><rect x="2729" y="2378" width="424" height="26"/></clipPath><clipPath id="mx-clip-2729-2458-424-26-0"><rect x="2729" y="2458" width="424" height="26"/></clipPath><clipPath id="mx-clip-2729-2548-424-26-0"><rect x="2729" y="2548" width="424" height="26"/></clipPath><clipPath id="mx-clip-2729-2628-424-26-0"><rect x="2729" y="2628" width="424" height="26"/></clipPath><clipPath id="mx-clip-2729-2718-424-26-0"><rect x="2729" y="2718" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2268-424-26-0"><rect x="1749" y="2268" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2294-424-26-0"><rect x="1749" y="2294" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2320-424-26-0"><rect x="1749" y="2320" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2346-424-26-0"><rect x="1749" y="2346" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2372-424-26-0"><rect x="1749" y="2372" width="424" height="26"/></clipPath><clipPath id="mx-clip-1749-2398-424-26-0"><rect x="1749" y="2398" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3761-424-26-0"><rect x="604" y="3761" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3795-424-28-0"><rect x="604" y="3795" width="424" height="28"/></clipPath><clipPath id="mx-clip-604-3595-424-26-0"><rect x="604" y="3595" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3621-424-26-0"><rect x="604" y="3621" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3655-424-41-0"><rect x="604" y="3655" width="424" height="41"/></clipPath><clipPath id="mx-clip-604-3471-424-26-0"><rect x="604" y="3471" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3505-424-26-0"><rect x="604" y="3505" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3285-424-26-0"><rect x="604" y="3285" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3311-424-26-0"><rect x="604" y="3311" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3345-424-26-0"><rect x="604" y="3345" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3371-424-26-0"><rect x="604" y="3371" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3108-424-26-0"><rect x="604" y="3108" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3134-424-26-0"><rect x="604" y="3134" width="424" height="26"/></clipPath><clipPath id="mx-clip-604-3168-424-41-0"><rect x="604" y="3168" width="424" height="41"/></clipPath><clipPath id="mx-clip-1082-3122-424-26-0"><rect x="1082" y="3122" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3148-424-26-0"><rect x="1082" y="3148" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3174-424-26-0"><rect x="1082" y="3174" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3200-424-26-0"><rect x="1082" y="3200" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3226-424-26-0"><rect x="1082" y="3226" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3252-424-26-0"><rect x="1082" y="3252" width="424" height="26"/></clipPath><clipPath id="mx-clip-1551-3590-424-26-0"><rect x="1551" y="3590" width="424" height="26"/></clipPath><clipPath id="mx-clip-1551-3624-424-26-0"><rect x="1551" y="3624" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3590-424-26-0"><rect x="1082" y="3590" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3624-424-26-0"><rect x="1082" y="3624" width="424" height="26"/></clipPath><clipPath id="mx-clip-1082-3650-424-24-0"><rect x="1082" y="3650" width="424" height="24"/></clipPath><clipPath id="mx-clip-2044-3590-424-26-0"><rect x="2044" y="3590" width="424" height="26"/></clipPath><clipPath id="mx-clip-2044-3616-424-26-0"><rect x="2044" y="3616" width="424" height="26"/></clipPath><clipPath id="mx-clip-2044-3642-424-26-0"><rect x="2044" y="3642" width="424" height="26"/></clipPath><clipPath id="mx-clip-2044-3676-424-56-0"><rect x="2044" y="3676" width="424" height="56"/></clipPath><clipPath id="mx-clip-2044-3732-424-24-0"><rect x="2044" y="3732" width="424" height="24"/></clipPath><clipPath id="mx-clip-2504-3591-424-26-0"><rect x="2504" y="3591" width="424" height="26"/></clipPath><clipPath id="mx-clip-2504-3617-424-26-0"><rect x="2504" y="3617" width="424" height="26"/></clipPath><clipPath id="mx-clip-2504-3651-424-44-0"><rect x="2504" y="3651" width="424" height="44"/></clipPath><clipPath id="mx-clip-2504-3695-424-24-0"><rect x="2504" y="3695" width="424" height="24"/></clipPath><clipPath id="mx-clip-1559-3353-424-26-0"><rect x="1559" y="3353" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3379-424-26-0"><rect x="1559" y="3379" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3452-424-26-0"><rect x="1559" y="3452" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3478-424-26-0"><rect x="1559" y="3478" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3109-424-26-0"><rect x="1559" y="3109" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3135-424-26-0"><rect x="1559" y="3135" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3161-424-26-0"><rect x="1559" y="3161" width="424" height="26"/></clipPath><clipPath id="mx-clip-1559-3195-424-65-0"><rect x="1559" y="3195" width="424" height="65"/></clipPath><clipPath id="mx-clip-1559-3260-424-24-0"><rect x="1559" y="3260" width="424" height="24"/></clipPath><clipPath id="mx-clip-1204-2654-424-26-0"><rect x="1204" y="2654" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2680-424-26-0"><rect x="1204" y="2680" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2714-424-26-0"><rect x="1204" y="2714" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2740-424-26-0"><rect x="1204" y="2740" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2766-424-26-0"><rect x="1204" y="2766" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2792-424-26-0"><rect x="1204" y="2792" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2818-424-26-0"><rect x="1204" y="2818" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2844-424-26-0"><rect x="1204" y="2844" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2870-424-26-0"><rect x="1204" y="2870" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2896-424-26-0"><rect x="1204" y="2896" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2922-424-26-0"><rect x="1204" y="2922" width="424" height="26"/></clipPath><clipPath id="mx-clip-1204-2948-424-26-0"><rect x="1204" y="2948" width="424" height="26"/></clipPath><clipPath id="mx-clip-659-2246-458-26-0"><rect x="659" y="2246" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2272-458-26-0"><rect x="659" y="2272" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2306-458-26-0"><rect x="659" y="2306" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2332-458-26-0"><rect x="659" y="2332" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2358-458-26-0"><rect x="659" y="2358" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2384-458-26-0"><rect x="659" y="2384" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2410-458-26-0"><rect x="659" y="2410" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2436-458-26-0"><rect x="659" y="2436" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2462-458-26-0"><rect x="659" y="2462" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2488-458-26-0"><rect x="659" y="2488" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2514-458-26-0"><rect x="659" y="2514" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2540-458-26-0"><rect x="659" y="2540" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2566-458-26-0"><rect x="659" y="2566" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2592-458-26-0"><rect x="659" y="2592" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2618-458-26-0"><rect x="659" y="2618" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2644-458-26-0"><rect x="659" y="2644" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2670-458-26-0"><rect x="659" y="2670" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2696-458-26-0"><rect x="659" y="2696" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2722-458-26-0"><rect x="659" y="2722" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2748-458-26-0"><rect x="659" y="2748" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2774-458-26-0"><rect x="659" y="2774" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2800-458-26-0"><rect x="659" y="2800" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2826-458-26-0"><rect x="659" y="2826" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2852-458-26-0"><rect x="659" y="2852" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2878-458-26-0"><rect x="659" y="2878" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2904-458-26-0"><rect x="659" y="2904" width="458" height="26"/></clipPath><clipPath id="mx-clip-659-2930-458-29-0"><rect x="659" y="2930" width="458" height="29"/></clipPath><clipPath id="mx-clip-659-2959-458-26-0"><rect x="659" y="2959" width="458" height="26"/></clipPath><clipPath id="mx-clip-1439-1294-424-26-0"><rect x="1439" y="1294" width="424" height="26"/></clipPath><clipPath id="mx-clip-49-2213-547-26-0"><rect x="49" y="2213" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2239-547-26-0"><rect x="49" y="2239" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2265-547-26-0"><rect x="49" y="2265" width="547" height="26"/></clipPath><clipPath id="mx-clip-49-2291-547-26-0"><rect x="49" y="2291" width="547" height="26"/></clipPath><clipPath id="mx-clip-41-266-575-26-0"><rect x="41" y="266" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-292-575-26-0"><rect x="41" y="292" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-318-575-26-0"><rect x="41" y="318" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-344-575-26-0"><rect x="41" y="344" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-370-575-26-0"><rect x="41" y="370" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-396-575-26-0"><rect x="41" y="396" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-422-575-26-0"><rect x="41" y="422" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-448-575-26-0"><rect x="41" y="448" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-474-575-26-0"><rect x="41" y="474" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-500-575-26-0"><rect x="41" y="500" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-526-575-26-0"><rect x="41" y="526" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-649-575-26-0"><rect x="41" y="649" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-675-575-26-0"><rect x="41" y="675" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-701-575-26-0"><rect x="41" y="701" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-727-575-26-0"><rect x="41" y="727" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-753-575-26-0"><rect x="41" y="753" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-779-575-26-0"><rect x="41" y="779" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-805-575-26-0"><rect x="41" y="805" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-831-575-26-0"><rect x="41" y="831" width="575" height="26"/></clipPath><clipPath id="mx-clip-41-857-575-26-0"><rect x="41" y="857" width="575" height="26"/></clipPath><clipPath id="mx-clip-2053-3109-424-26-0"><rect x="2053" y="3109" width="424" height="26"/></clipPath><clipPath id="mx-clip-2053-3135-424-26-0"><rect x="2053" y="3135" width="424" height="26"/></clipPath><clipPath id="mx-clip-2053-3161-424-26-0"><rect x="2053" y="3161" width="424" height="26"/></clipPath><clipPath id="mx-clip-2053-3195-424-25-0"><rect x="2053" y="3195" width="424" height="25"/></clipPath><clipPath id="mx-clip-2053-3220-424-37-0"><rect x="2053" y="3220" width="424" height="37"/></clipPath><clipPath id="mx-clip-2053-3257-424-39-0"><rect x="2053" y="3257" width="424" height="39"/></clipPath><clipPath id="mx-clip-2053-3296-424-39-0"><rect x="2053" y="3296" width="424" height="39"/></clipPath><clipPath id="mx-clip-2053-3335-424-39-0"><rect x="2053" y="3335" width="424" height="39"/></clipPath><clipPath id="mx-clip-2053-3374-424-27-0"><rect x="2053" y="3374" width="424" height="27"/></clipPath></defs><g><path d="M 2818 44 L 2818 18 L 3250 18 L 3250 44" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="all"/><path d="M 2818 44 L 2818 208 L 3250 208 L 3250 44" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 2818 44 L 3250 44" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3033.5" y="35.5">BaseExtractor</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-49-424-26-0)" font-size="12px"><text x="2823.5" y="61.5"># currentStmtNo: int = -1</text></g><path d="M 2818 74 L 3250 74" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-83-424-26-0)" font-size="12px"><text x="2823.5" y="95.5">+ BaseExtractor()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-109-424-26-0)" font-size="12px"><text x="2823.5" y="121.5">+ extractProgram(const std::shared_ptr&lt;ProgramNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-135-424-26-0)" font-size="12px"><text x="2823.5" y="147.5"># extractProcedure(const std::shared_ptr&lt;ProcedureNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-161-424-26-0)" font-size="12px"><text x="2823.5" y="173.5"># extractStmtList(const std::shared_ptr&lt;StmtListNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2822-187-424-26-0)" font-size="12px"><text x="2823.5" y="199.5"># extractStmt(const std::shared_ptr&lt;StmtNode&gt; node)</text></g><path d="M 2367 285 L 2367 252 L 3034 252 L 3034 222.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3034 209.12 L 3040.5 222.12 L 3027.5 222.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 504 L 2135 504 L 2135 1120.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1133.88 L 2128.5 1120.88 L 2141.5 1120.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 471 L 1965 471 L 1965 1082 L 1415 1082 L 1415 1923 L 602.24 1923" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 614.12 1916.5 L 601.12 1923 L 614.12 1929.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 311 L 2151 285 L 2583 285 L 2583 311" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 311 L 2151 683 L 2583 683 L 2583 311" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 311 L 2583 311" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2366.5" y="302.5">EntityExtractor</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-316-424-26-0)" font-size="12px"><text x="2156.5" y="328.5">- entityStore: std::shared_ptr&lt;IEntityStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-342-424-26-0)" font-size="12px"><text x="2156.5" y="354.5">- patternStore: std::shared_ptr&lt;IPatternStore&gt;</text></g><path d="M 2151 367 L 2583 367" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-376-424-26-0)" font-size="12px"><text x="2156.5" y="388.5">+ EntityExtractor(std::shared_ptr&lt;IEntityStore&gt; entityStore)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-402-424-26-0)" font-size="12px"><text x="2156.5" y="414.5">+ extractProgram(const std::shared_ptr&lt;ProgramNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-428-424-26-0)" font-size="12px"><text x="2156.5" y="440.5">- extractProcedure(const std::shared_ptr&lt;ProcedureNode&gt;&amp; node) override</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-454-424-26-0)" font-size="12px"><text x="2156.5" y="466.5">- extractProcedure(const std::shared_ptr&lt;ProcedureNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-480-424-26-0)" font-size="12px"><text x="2156.5" y="492.5">- extractStmt(const std::shared_ptr&lt;StmtNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-506-424-26-0)" font-size="12px"><text x="2156.5" y="518.5">- extractRead(std::shared_ptr&lt;ReadNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-532-424-26-0)" font-size="12px"><text x="2156.5" y="544.5">- extractPrint(std::shared_ptr&lt;PrintNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-558-424-26-0)" font-size="12px"><text x="2156.5" y="570.5">- extractAssign(std::shared_ptr&lt;AssignNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-584-424-26-0)" font-size="12px"><text x="2156.5" y="596.5">- extractIf(std::shared_ptr&lt;IfNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-610-424-26-0)" font-size="12px"><text x="2156.5" y="622.5">- extractWhile(std::shared_ptr&lt;WhileNode&gt; node)extractWhile</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-636-424-26-0)" font-size="12px"><text x="2156.5" y="648.5">- extractCall(std::shared_ptr&lt;CallNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2155-662-424-26-0)" font-size="12px"><text x="2156.5" y="674.5">- insertConstants(const std::unordered_set&lt;int&gt;&amp; constants)</text></g><path d="M 2135 1183 L 2135 1226.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1239.88 L 2128.5 1226.88 L 2141.5 1226.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1183 L 2135 1207 L 1651 1207 L 1651 1226.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1651 1239.88 L 1644.5 1226.88 L 1657.5 1226.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1175 L 1919 1135 L 2351 1135 L 2351 1175" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1175 L 1919 1183 L 2351 1183 L 2351 1175" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1175 L 2351 1175" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1142px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IEntityExtractor</div></div></div></foreignObject><text x="2135" y="1154" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1179 L 2351 1179" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1289 L 2135 1329.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1342.88 L 2128.5 1329.88 L 2141.5 1329.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1289 L 2135 1305 L 1883 1305 L 1883 1436 L 2135 1436 L 2135 1449.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1462.88 L 2128.5 1449.88 L 2141.5 1449.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1289 L 2135 1305 L 1883 1305 L 1883 1555 L 2135 1555 L 2135 1569.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1582.88 L 2128.5 1569.88 L 2141.5 1569.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1289 L 2135 1305 L 1883 1305 L 1883 1684 L 2135 1684 L 2135 1689.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1702.88 L 2128.5 1689.88 L 2141.5 1689.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2135 1289 L 2135 1305 L 1883 1305 L 1883 1798 L 2135 1798 L 2135 1809.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1822.88 L 2128.5 1809.88 L 2141.5 1809.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1265 L 1883 1265 L 1883 1913 L 2135 1913 L 2135 1919.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1932.88 L 2128.5 1919.88 L 2141.5 1919.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1281 L 1919 1241 L 2351 1241 L 2351 1281" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1281 L 1919 1289 L 2351 1289 L 2351 1281" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1281 L 2351 1281" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1248px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IStmtExtractor</div></div></div></foreignObject><text x="2135" y="1260" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1285 L 2351 1285" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1384 L 1919 1344 L 2351 1344 L 2351 1384" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1384 L 1919 1418 L 2351 1418 L 2351 1384" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1384 L 2351 1384" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1351px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IReadExtractor</div></div></div></foreignObject><text x="2135" y="1363" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1388 L 2351 1388" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1397-424-26-0)" font-size="12px"><text x="1924.5" y="1409.5">+ extractRead(std::shared_ptr&lt;ReadNode&gt; node)</text></g><path d="M 1919 1624 L 1919 1584 L 2351 1584 L 2351 1624" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1624 L 1919 1664 L 2351 1664 L 2351 1624" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1624 L 2351 1624" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1591px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />ICallExtractor</div></div></div></foreignObject><text x="2135" y="1603" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1628 L 2351 1628" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1637-424-26-0)" font-size="12px"><text x="1924.5" y="1649.5">+ extractCall(std::shared_ptr&lt;CallNode&gt; node)</text></g><path d="M 1919 1744 L 1919 1704 L 2351 1704 L 2351 1744" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1744 L 1919 1778 L 2351 1778 L 2351 1744" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1744 L 2351 1744" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1711px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IAssignExtractor</div></div></div></foreignObject><text x="2135" y="1723" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1748 L 2351 1748" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1757-424-26-0)" font-size="12px"><text x="1924.5" y="1769.5">+ extractAssign(std::shared_ptr&lt;AssignNode&gt; node)</text></g><path d="M 1919 1504 L 1919 1464 L 2351 1464 L 2351 1504" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1504 L 1919 1538 L 2351 1538 L 2351 1504" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1504 L 2351 1504" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1471px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IPrintExtractor</div></div></div></foreignObject><text x="2135" y="1483" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1508 L 2351 1508" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1517-424-26-0)" font-size="12px"><text x="1924.5" y="1529.5">+ extractPrint(std::shared_ptr&lt;PrintNode&gt; node)</text></g><path d="M 1919 1864 L 1919 1824 L 2351 1824 L 2351 1864" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1864 L 1919 1898 L 2351 1898 L 2351 1864" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1864 L 2351 1864" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1831px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IWhileExtractor</div></div></div></foreignObject><text x="2135" y="1843" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1868 L 2351 1868" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1877-424-26-0)" font-size="12px"><text x="1924.5" y="1889.5">+ extractWhile(std::shared_ptr&lt;WhileNode&gt; node)</text></g><path d="M 1919 1974 L 1919 1934 L 2351 1934 L 2351 1974" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1974 L 1919 2008 L 2351 2008 L 2351 1974" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1919 1974 L 2351 1974" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1941px; margin-left: 1920px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IIfExtractor</div></div></div></foreignObject><text x="2135" y="1953" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1919 1978 L 2351 1978" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1923-1987-424-26-0)" font-size="12px"><text x="1924.5" y="1999.5">+ extractIf(std::shared_ptr&lt;IfNode&gt; node)</text></g><path d="M 1652 943 L 1652 1034 L 1651.14 1120.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1651.01 1133.88 L 1644.64 1120.82 L 1657.64 1120.95 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1652 285 L 1652 251.5 L 3034 251.5 L 3034 222.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3034 209.12 L 3040.5 222.12 L 3027.5 222.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1441 311 L 1441 285 L 1863 285 L 1863 311" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1441 311 L 1441 943 L 1863 943 L 1863 311" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1441 311 L 1863 311" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1651.5" y="302.5">RelationshipExtractor</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-316-414-26-0)" font-size="12px"><text x="1446.5" y="328.5">- relationshipStore: std::shared_ptr&lt;IRelationshipStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-342-414-26-0)" font-size="12px"><text x="1446.5" y="354.5">- currProcedureName: std::string</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-368-414-26-0)" font-size="12px"><text x="1446.5" y="380.5">- usesPRelationships: std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-394-414-26-0)" font-size="12px"><text x="1446.5" y="406.5">- modifiesPRelationships: std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-420-414-26-0)" font-size="12px"><text x="1446.5" y="432.5">- callPReversedRelationships: std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-446-414-26-0)" font-size="12px"><text x="1446.5" y="458.5">- procedureUniqueCallCount: std::unordered_map&lt;std::string, int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-472-414-26-0)" font-size="12px"><text x="1446.5" y="484.5">- procedureCalledList: std::unordered_map&lt;std::string, std::unique_ptr&lt;std::unordered_set&lt;int&gt;&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-498-414-26-0)" font-size="12px"><text x="1446.5" y="510.5">- parentIndexStack: std::vector&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-524-414-26-0)" font-size="12px"><text x="1446.5" y="536.5">- followsStack: std::vector&lt;std::shared_ptr&lt;std::vector&lt;int&gt;&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-550-414-26-0)" font-size="12px"><text x="1446.5" y="562.5">- statementStack: std::vector&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-576-414-26-0)" font-size="12px"><text x="1446.5" y="588.5">- whileStack: std::vector&lt;int&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-602-414-26-0)" font-size="12px"><text x="1446.5" y="614.5">- ifStack: std::vector&lt;int&gt;</text></g><path d="M 1441 627 L 1863 627" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-636-414-26-0)" font-size="12px"><text x="1446.5" y="648.5">+ RelationshipExtractor(std::shared_ptr&lt;IRelationshipStore&gt; storage)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-662-414-26-0)" font-size="12px"><text x="1446.5" y="674.5">- insertUsesGroup(const std::shared_ptr&lt;VariableNameNode&gt;&amp; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-688-414-26-0)" font-size="12px"><text x="1446.5" y="700.5">- insertModifiesGroup(const std::shared_ptr&lt;VariableNameNode&gt;&amp; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-714-414-26-0)" font-size="12px"><text x="1446.5" y="726.5">- insertExprUsesGroup()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-740-414-26-0)" font-size="12px"><text x="1446.5" y="752.5">- extractProcedure(std::shared_ptr&lt;ProcedureNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-766-414-26-0)" font-size="12px"><text x="1446.5" y="778.5">- extractStmt(std::shared_ptr&lt;StmtNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-792-414-26-0)" font-size="12px"><text x="1446.5" y="804.5">- extractRead(std::shared_ptr&lt;ReadNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-818-414-26-0)" font-size="12px"><text x="1446.5" y="830.5">- extractPrint(std::shared_ptr&lt;PrintNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-844-414-26-0)" font-size="12px"><text x="1446.5" y="856.5">- extractAssign(std::shared_ptr&lt;AssignNode&gt; node) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-870-414-26-0)" font-size="12px"><text x="1446.5" y="882.5">- extractIf(std::shared_ptr&lt;IfNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-896-414-26-0)" font-size="12px"><text x="1446.5" y="908.5">- extractWhile(std::shared_ptr&lt;WhileNode&gt; node)extractWhile</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1445-922-414-26-0)" font-size="12px"><text x="1446.5" y="934.5">- extractCall(std::shared_ptr&lt;CallNode&gt; node)</text></g><path d="M 1651 1183 L 1651 1207 L 2135 1207 L 2135 1226.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2135 1239.88 L 2128.5 1226.88 L 2141.5 1226.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1651 1183 L 1651 1226.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1651 1239.88 L 1644.5 1226.88 L 1657.5 1226.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1175 L 1435 1135 L 1867 1135 L 1867 1175" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1175 L 1435 1183 L 1867 1183 L 1867 1175" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1175 L 1867 1175" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1142px; margin-left: 1436px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IRelationshipExtractor</div></div></div></foreignObject><text x="1651" y="1154" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1435 1179 L 1867 1179" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2801 455 L 2801 429 L 3233 429 L 3233 455" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 2801 455 L 2801 569 L 3233 569 L 3233 455" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 2801 455 L 3233 455" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3016.5" y="446.5">DesignExtractor</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2805-460-424-26-0)" font-size="12px"><text x="2806.5" y="472.5">- entityExtractor: std::unique_ptr&lt;IExtractor&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2805-486-424-26-0)" font-size="12px"><text x="2806.5" y="498.5">- relationshipExtractor: std::unique_ptr&lt;IExtractor&gt;</text></g><path d="M 2801 511 L 3233 511" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2805-520-424-26-0)" font-size="12px"><text x="2806.5" y="532.5">+ DesignExtractor(const std::shared_ptr&lt;IStore&gt;&amp; store)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2805-546-424-26-0)" font-size="12px"><text x="2806.5" y="558.5">+ extract(const std::shared_ptr&lt;ProgramNode&gt;&amp; programNode)</text></g><path d="M 2583 495 L 2761 495 L 2761 399 L 3017 399 L 3017 415.29" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3017 428.29 L 3010.5 421.79 L 3017 415.29 L 3023.5 421.79 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1863 880 L 2761 880 L 2761 399 L 3017 399 L 3017 415.29" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3017 428.29 L 3010.5 421.79 L 3017 415.29 L 3023.5 421.79 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 831 1249 L 831 1209 L 1261 1209 L 1261 1249" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 831 1249 L 831 1339 L 1261 1339 L 1261 1249" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 831 1249 L 1261 1249" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 428px; height: 1px; padding-top: 1216px; margin-left: 832px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IStore</div></div></div></foreignObject><text x="1046" y="1228" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 831 1253 L 1261 1253" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-835-1262-422-26-0)" font-size="12px"><text x="836.5" y="1274.5">+ getEntityStore(): std::shared_ptr&lt;IEntityStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-835-1288-422-26-0)" font-size="12px"><text x="836.5" y="1300.5">+ getPatternStore(): std::shared_ptr&lt;IPatternStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-835-1314-422-26-0)" font-size="12px"><text x="836.5" y="1326.5">+ getRelationshipStore(): std::shared_ptr&lt;IRelationshipStore&gt;</text></g><path d="M 762 112 L 762 72 L 1194 72 L 1194 112" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 762 112 L 762 406 L 1194 406 L 1194 112" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 762 112 L 1194 112" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 79px; margin-left: 763px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IEntityStore</div></div></div></foreignObject><text x="978" y="91" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 762 116 L 1194 116" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-125-424-26-0)" font-size="12px"><text x="767.5" y="137.5">+ insertProcedure(std::shared_ptr&lt;ProcedureNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-151-424-26-0)" font-size="12px"><text x="767.5" y="163.5">+ insertStatement(std::shared_ptr&lt;StmtNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-177-424-26-0)" font-size="12px"><text x="767.5" y="189.5">+ insertReadStatement(std::shared_ptr&lt;ReadNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-203-424-26-0)" font-size="12px"><text x="767.5" y="215.5">+ insertPrintStatement(std::shared_ptr&lt;PrintNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-229-424-26-0)" font-size="12px"><text x="767.5" y="241.5">+ insertAssignStatement(std::shared_ptr&lt;AssignNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-255-424-26-0)" font-size="12px"><text x="767.5" y="267.5">+ insertCallStatement(std::shared_ptr&lt;CallNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-281-424-26-0)" font-size="12px"><text x="767.5" y="293.5">+ insertWhileStatement(std::shared_ptr&lt;WhileNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-307-424-26-0)" font-size="12px"><text x="767.5" y="319.5">+ insertReadStatement(std::shared_ptr&lt;ReadNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-333-424-26-0)" font-size="12px"><text x="767.5" y="345.5">+ insertIfStatement(std::shared_ptr&lt;IfNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-359-424-26-0)" font-size="12px"><text x="767.5" y="371.5">+ insertName(const std::string &amp;name)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-766-385-424-26-0)" font-size="12px"><text x="767.5" y="397.5">+ insertConstant(const int &amp;integer)</text></g><path d="M 328.5 149 L 328.5 198.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 328.5 211.88 L 322 198.88 L 335 198.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 328.5 149 L 328.5 175 L 24 175 L 24 575 L 328.5 575 L 328.5 581.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 328.5 594.88 L 322 581.88 L 335 581.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 138 L 78.5 98 L 578.5 98 L 578.5 138" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 138 L 78.5 149 L 578.5 149 L 578.5 138" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 138 L 578.5 138" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 498px; height: 1px; padding-top: 105px; margin-left: 80px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IRelationshipStore</div></div></div></foreignObject><text x="329" y="117" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 78.5 142 L 578.5 142" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1046 1404 L 1046 1353.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1046 1340.12 L 1052.5 1353.12 L 1039.5 1353.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 730 1430 L 730 1404 L 1362 1404 L 1362 1430" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 730 1430 L 730 1624 L 1362 1624 L 1362 1430" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 730 1430 L 1362 1430" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1045.5" y="1421.5">Store</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1435-624-26-0)" font-size="12px"><text x="735.5" y="1447.5">- entityStore: std::shared_ptr&lt;IEntityStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1461-624-26-0)" font-size="12px"><text x="735.5" y="1473.5">- relationshipStore: std::shared_ptr&lt;IRelationshipStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1487-624-26-0)" font-size="12px"><text x="735.5" y="1499.5">- patternStore: std::shared_ptr&lt;IPatternStore&gt;</text></g><path d="M 730 1512 L 1362 1512" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1521-624-26-0)" font-size="12px"><text x="735.5" y="1533.5">+ Store(const std::shared_ptr&lt;WriteStorage&gt;&amp; writeStorage, const std::shared_ptr&lt;ReadStorage&gt;&amp; readStorage)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1547-624-26-0)" font-size="12px"><text x="735.5" y="1559.5">+ getEntityStore(): std::shared_ptr&lt;IEntityStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1573-624-26-0)" font-size="12px"><text x="735.5" y="1585.5">+ getRelationshipStore(): std::shared_ptr&lt;IRelationshipStore&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-734-1599-624-26-0)" font-size="12px"><text x="735.5" y="1611.5">+ getPatternStore(): std::shared_ptr&lt;IPatternStore&gt;</text></g><path d="M 979 443 L 979 423 L 978.83 420.09" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 978.07 407.12 L 985.32 419.71 L 972.34 420.48 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 764 469 L 764 443 L 1194 443 L 1194 469" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 764 469 L 764 1049 L 1194 1049 L 1194 469" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 764 469 L 1194 469" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="978.5" y="460.5">EntityStore</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-474-422-26-0)" font-size="12px"><text x="769.5" y="486.5">- procedureManager: std::shared_ptr&lt;IWriteEntityManager&lt;std::string&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-500-422-26-0)" font-size="12px"><text x="769.5" y="512.5">- statementManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-526-422-26-0)" font-size="12px"><text x="769.5" y="538.5">- readManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-552-422-26-0)" font-size="12px"><text x="769.5" y="564.5">- printManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-578-422-26-0)" font-size="12px"><text x="769.5" y="590.5">- assignManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-604-422-26-0)" font-size="12px"><text x="769.5" y="616.5">- callManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-630-422-26-0)" font-size="12px"><text x="769.5" y="642.5">- whileManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-656-422-26-0)" font-size="12px"><text x="769.5" y="668.5">- ifManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-682-422-26-0)" font-size="12px"><text x="769.5" y="694.5">- variableManager: std::shared_ptr&lt;IWriteEntityManager&lt;std::string&gt;&gt;  </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-708-422-26-0)" font-size="12px"><text x="769.5" y="720.5">- constantManager: std::shared_ptr&lt;IWriteEntityManager&lt;int&gt;&gt; </text></g><path d="M 764 733 L 1194 733" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-742-422-26-0)" font-size="12px"><text x="769.5" y="754.5">+ EntityStore(std::shared_ptr&lt;WriteStorage&gt; storage)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-768-422-26-0)" font-size="12px"><text x="769.5" y="780.5">+ insertProcedure(std::shared_ptr&lt;ProcedureNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-794-422-26-0)" font-size="12px"><text x="769.5" y="806.5">+ insertConstant(const int &amp;integer)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-820-422-26-0)" font-size="12px"><text x="769.5" y="832.5">+ insertName(const std::string &amp;name)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-846-422-26-0)" font-size="12px"><text x="769.5" y="858.5">+ insertIfStatement(std::shared_ptr&lt;IfNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-872-422-26-0)" font-size="12px"><text x="769.5" y="884.5">+ insertReadStatement(std::shared_ptr&lt;ReadNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-898-422-26-0)" font-size="12px"><text x="769.5" y="910.5">+ insertWhileStatement(std::shared_ptr&lt;WhileNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-924-422-26-0)" font-size="12px"><text x="769.5" y="936.5">+ insertCallStatement(std::shared_ptr&lt;CallNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-950-422-26-0)" font-size="12px"><text x="769.5" y="962.5">+ insertAssignStatement(std::shared_ptr&lt;AssignNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-976-422-26-0)" font-size="12px"><text x="769.5" y="988.5">+ insertPrintStatement(std::shared_ptr&lt;PrintNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-1002-422-26-0)" font-size="12px"><text x="769.5" y="1014.5">+ insertReadStatement(std::shared_ptr&lt;ReadNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-768-1028-422-26-0)" font-size="12px"><text x="769.5" y="1040.5">+ insertStatement(std::shared_ptr&lt;StmtNode&gt; node)</text></g><path d="M 304 933 L 304 905 L 672 905 L 672 123.5 L 592.62 123.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 579.62 123.5 L 592.62 117 L 592.62 130 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 694 1366 L 708 1366 L 708 1514 L 716.29 1514" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 729.29 1514 L 722.79 1520.5 L 716.29 1514 L 722.79 1507.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 14 959 L 14 933 L 694 933 L 694 959" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 14 959 L 14 1799 L 694 1799 L 694 959" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 14 959 L 694 959" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="353.5" y="950.5">RelationshipStore</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-964-672-26-0)" font-size="12px"><text x="19.5" y="976.5">- followsManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-990-672-26-0)" font-size="12px"><text x="19.5" y="1002.5">- followsTManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1016-672-26-0)" font-size="12px"><text x="19.5" y="1028.5">- parentManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1042-672-26-0)" font-size="12px"><text x="19.5" y="1054.5">- parentTManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1068-672-26-0)" font-size="12px"><text x="19.5" y="1080.5">- usesSManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1094-672-26-0)" font-size="12px"><text x="19.5" y="1106.5">- modifiesSManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1120-672-26-0)" font-size="12px"><text x="19.5" y="1132.5">- usesPManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;std::string, std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1146-672-26-0)" font-size="12px"><text x="19.5" y="1158.5">- modifiesPManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;std::string, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1172-672-26-0)" font-size="12px"><text x="19.5" y="1184.5">- nextManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, int&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1198-672-26-0)" font-size="12px"><text x="19.5" y="1210.5">- callSManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1224-672-26-0)" font-size="12px"><text x="19.5" y="1236.5">- callPManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;std::string, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1250-672-26-0)" font-size="12px"><text x="19.5" y="1262.5">- callsTManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;std::string, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1276-672-26-0)" font-size="12px"><text x="19.5" y="1288.5">- readStorage: std::shared_ptr&lt;ReadStorage&gt;</text></g><path d="M 14 1301 L 694 1301" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1310-672-26-0)" font-size="12px"><text x="19.5" y="1322.5">+ RelationshipStore(const std::shared_ptr&lt;WriteStorage&gt;&amp; writeStorage, const std::shared_ptr&lt;ReadStorage&gt;&amp; readStorage)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1336-672-26-0)" font-size="12px"><text x="19.5" y="1348.5">+ insertFollowsRelationship(const int &amp;previousStmtNo, const int &amp;currentStmtNo) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1362-672-26-0)" font-size="12px"><text x="19.5" y="1374.5">+ getProcedureEntities(): std::unordered_set&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1388-672-26-0)" font-size="12px"><text x="19.5" y="1400.5">+ getUsesPRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1414-672-26-0)" font-size="12px"><text x="19.5" y="1426.5">+ getModifiesPRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1440-672-26-0)" font-size="12px"><text x="19.5" y="1452.5">+ getCallsTRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1466-672-26-0)" font-size="12px"><text x="19.5" y="1478.5">+ getCallsPReversedRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1492-672-26-0)" font-size="12px"><text x="19.5" y="1504.5">+ procedureEntitiesContains(std::string procedureName): bool </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1518-672-26-0)" font-size="12px"><text x="19.5" y="1530.5">+ callsPReadContains(std::string procedureName1, std::string procedureName2): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1544-672-26-0)" font-size="12px"><text x="19.5" y="1556.5">+ insertParentsRelationship(const int &amp;parentStmtNo, const int &amp;childStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1570-672-26-0)" font-size="12px"><text x="19.5" y="1582.5">+ insertUsesSRelationship(const int &amp;stmtNo, const std::string &amp;variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1596-672-26-0)" font-size="12px"><text x="19.5" y="1608.5">+ insertModifiesSRelationship(const int &amp;stmtNo, const std::string &amp;variableName</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1622-672-26-0)" font-size="12px"><text x="19.5" y="1634.5">+ insertUsesPRelationship(std::string  &amp;procedureName, const std::string &amp;variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1648-672-26-0)" font-size="12px"><text x="19.5" y="1660.5">+ insertModifiesPRelationship(std::string  &amp;procedureName, const std::string &amp;variableName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1674-672-26-0)" font-size="12px"><text x="19.5" y="1686.5">+ insertCallsRelationship(const int &amp;stmtNo, const std::string &amp;callerName, const std::string &amp;calleeName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1700-672-26-0)" font-size="12px"><text x="19.5" y="1712.5">+ insertNextRelationship(int previousStmtNo, int currStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1726-672-26-0)" font-size="12px"><text x="19.5" y="1738.5">+ insertCallsTRelationship(std::string caller, std::string callee)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1752-672-26-0)" font-size="12px"><text x="19.5" y="1764.5">+ invokePreReverseRelationship()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-18-1778-672-26-0)" font-size="12px"><text x="19.5" y="1790.5">+ invokePostReverseRelationship()</text></g><path d="M 322.5 1875 L 322.5 1845 L 708 1845 L 708 1514 L 716.29 1514" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 729.29 1514 L 722.79 1520.5 L 716.29 1514 L 722.79 1507.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 1901 L 45 1875 L 600 1875 L 600 1901" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 1901 L 45 2117 L 600 2117 L 600 1901" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 1901 L 600 1901" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="322" y="1892.5">PatternStore</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-1906-547-26-0)" font-size="12px"><text x="50.5" y="1918.5">- patternManager: std::shared_ptr&lt;IWritePatternManager&lt;std::string, std::shared_ptr&lt;ShuntNode&gt;&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-1932-547-26-0)" font-size="12px"><text x="50.5" y="1944.5">- whileCondManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-1958-547-26-0)" font-size="12px"><text x="50.5" y="1970.5">- ifCondManager: std::shared_ptr&lt;IWriteRelationshipManager&lt;int, std::string&gt;&gt;</text></g><path d="M 45 1983 L 600 1983" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-1992-547-26-0)" font-size="12px"><text x="50.5" y="2004.5">+ PatternStore(std::shared_ptr&lt;WriteStorage&gt; storage)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2018-547-26-0)" font-size="12px"><text x="50.5" y="2030.5">+ insertExpressionPattern(std::shared_ptr&lt;AssignNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2044-547-26-0)" font-size="12px"><text x="50.5" y="2056.5">+ insertCondExpressionIfStatement(int stmtIndex, std::string variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2070-547-26-0)" font-size="12px"><text x="50.5" y="2082.5">+ insertCondExpressionWhileStatement(int stmtIndex, std::string variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2096-547-26-0)" font-size="12px"><text x="50.5" y="2108.5">+ invokePostReversePattern()</text></g><path d="M 1803 2059 L 1724 2059 L 1648.71 2059" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1635.71 2059 L 1642.21 2052.5 L 1648.71 2059 L 1642.21 2065.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2019 2097 L 2019 2154 L 1961 2154 L 1961 2218.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1954.5 2206.88 L 1961 2219.88 L 1967.5 2206.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1803 2055 L 1803 2029 L 2235 2029 L 2235 2055" fill="#f8cecc" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><path d="M 1803 2055 L 1803 2097 L 2235 2097 L 2235 2055" fill="none" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><path d="M 1803 2055 L 2235 2055" fill="none" stroke="#b85450" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2018.5" y="2046.5">SourceManager</text></g><path d="M 1803 2059 L 2235 2059" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1803 2067 L 2235 2067" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1807-2076-424-26-0)" font-size="12px"><text x="1808.5" y="2088.5">+ process(const std::string&amp; filename, std::shared_ptr&lt;IStore&gt; store)</text></g><path d="M 1375 1968 L 1375 1241.5 L 1263.24 1241.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1275.12 1235 L 1262.12 1241.5 L 1275.12 1248" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1115 1994 L 1115 1968 L 1635 1968 L 1635 1994" fill="#fff2cc" stroke="#d6b656" stroke-miterlimit="10" pointer-events="none"/><path d="M 1115 1994 L 1115 2132 L 1635 2132 L 1635 1994" fill="none" stroke="#d6b656" stroke-miterlimit="10" pointer-events="none"/><path d="M 1115 1994 L 1635 1994" fill="none" stroke="#d6b656" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1374.5" y="1985.5">StaticProgramAnalyzer</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1119-1999-512-26-0)" font-size="12px"><text x="1120.5" y="2011.5">- queryManager: QueryManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1119-2025-512-26-0)" font-size="12px"><text x="1120.5" y="2037.5">- sourceManager: SourceManager</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1119-2051-512-26-0)" font-size="12px"><text x="1120.5" y="2063.5">- storageManager: std::unique_ptr&lt;StorageManager&gt; = std::make_unique&lt;StorageManager&gt;()</text></g><path d="M 1115 2076 L 1635 2076" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1119-2085-512-26-0)" font-size="12px"><text x="1120.5" y="2097.5">+ readProgramFromFile(const std::string&amp; filename)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1119-2111-512-26-0)" font-size="12px"><text x="1120.5" y="2123.5">+ evaluateQuery(std::string query, std::list&lt;std::string&gt;&amp; results)</text></g><path d="M 2235 2084 L 3035 2084 L 3035 572.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 3041.5 584.12 L 3035 571.12 L 3028.5 584.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2177 2732 L 2206 2732 L 2206 2228 L 2242.76 2228" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2230.88 2234.5 L 2243.88 2228 L 2230.88 2221.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2529 L 1745 2489 L 2177 2489 L 2177 2529" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2529 L 1745 2953 L 2177 2953 L 2177 2529" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2529 L 2177 2529" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 2496px; margin-left: 1746px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">{abstract}<br />AbstractTokenizer</div></div></div></foreignObject><text x="1961" y="2508" fill="#333333" font-family="Helvetica" font-size="12px" text-anchor="middle">{abstract}...</text></switch></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2534-424-26-0)" font-size="12px"><text x="1750.5" y="2546.5"># istream: std::istream*</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2560-424-26-0)" font-size="12px"><text x="1750.5" y="2572.5"># currentToken: std::string</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2586-424-26-0)" font-size="12px"><text x="1750.5" y="2598.5"># tokens: std::vector&lt;std::shared_ptr&lt;Token&gt;&gt; </text></g><path d="M 1745 2611 L 2177 2611" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2620-424-26-0)" font-size="12px"><text x="1750.5" y="2632.5">+ AbstractTokenizer(std::istream* stream)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2646-424-26-0)" font-size="12px"><text x="1750.5" y="2658.5">+ AbstractTokenizer(const std::string&amp; query)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2672-424-26-0)" font-size="12px"><text x="1750.5" y="2684.5">+ tokenize(): std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2698-424-26-0)" font-size="12px"><text x="1750.5" y="2710.5">- readSpecialChar() {abstract} </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2724-424-26-0)" font-size="12px"><text x="1750.5" y="2736.5">- hasLeadingZero(): bpol </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2750-424-26-0)" font-size="12px"><text x="1750.5" y="2762.5"># nextChar(): char </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2776-424-26-0)" font-size="12px"><text x="1750.5" y="2788.5"># nextChar(): char </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2802-424-26-0)" font-size="12px"><text x="1750.5" y="2814.5"># peekChar(): char </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2828-424-26-0)" font-size="12px"><text x="1750.5" y="2840.5"># readInteger()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2854-424-26-0)" font-size="12px"><text x="1750.5" y="2866.5"># readName()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2880-424-26-0)" font-size="12px"><text x="1750.5" y="2892.5"># getCurrentToken(): std::string</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2906-424-26-0)" font-size="12px"><text x="1750.5" y="2918.5"># addToken(const std::shared_ptr&lt;Token&gt;&amp; token)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2932-424-26-0)" font-size="12px"><text x="1750.5" y="2944.5"># getTokens(): std::vector&lt;std::shared_ptr&lt;Token&gt;</text></g><path d="M 2245 2215 L 2245 2189 L 2677 2189 L 2677 2215" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2245 2215 L 2245 2329 L 2677 2329 L 2677 2215" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2245 2215 L 2677 2215" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2460.5" y="2206.5">Token</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2220-424-26-0)" font-size="12px"><text x="2250.5" y="2232.5">+ value: const std::string </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2246-424-26-0)" font-size="12px"><text x="2250.5" y="2258.5">+ type: TokenType</text></g><path d="M 2245 2271 L 2677 2271" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2280-424-26-0)" font-size="12px"><text x="2250.5" y="2292.5">+ getValue(): std::string </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2306-424-26-0)" font-size="12px"><text x="2250.5" y="2318.5">+ operator==(const Token&amp; token) const: bool </text></g><path d="M 2461 2489 L 2461 2329" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2245 2529 L 2245 2489 L 2677 2489 L 2677 2529" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2245 2529 L 2245 2659 L 2677 2659 L 2677 2529" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2245 2529 L 2677 2529" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 2496px; margin-left: 2246px;"><div data-drawio-colors="color: #333333; " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(51, 51, 51); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; enumeration &gt;&gt;<br />TokenType</div></div></div></foreignObject><text x="2461" y="2508" fill="#333333" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; enumeration &gt;&gt;...</text></switch></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2534-424-26-0)" font-size="12px"><text x="2250.5" y="2546.5">TOKEN_NAME</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2560-424-26-0)" font-size="12px"><text x="2250.5" y="2572.5">TOKEN_INTEGER</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2586-424-26-0)" font-size="12px"><text x="2250.5" y="2598.5">TOKEN_END_OF_FILE</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2612-424-26-0)" font-size="12px"><text x="2250.5" y="2624.5">TOKEN_SPECIAL_CHAR</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2249-2638-424-26-0)" font-size="12px"><text x="2250.5" y="2650.5">TOKEN_STRING_EXPRESSION</text></g><path d="M 2725 2365 L 2725 2339 L 3157 2339 L 3157 2365" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2365 L 2725 2399 L 3157 2399 L 3157 2365" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2365 L 3157 2365" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2940.5" y="2356.5">EndOfFileToken</text></g><path d="M 2725 2369 L 3157 2369" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2729-2378-424-26-0)" font-size="12px"><text x="2730.5" y="2390.5">+ EndOfFileToken()</text></g><path d="M 3157 2449 L 3225 2449 L 3225 2159 L 2461 2159 L 2461 2174.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2461 2187.88 L 2454.5 2174.88 L 2467.5 2174.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2445 L 2725 2419 L 3157 2419 L 3157 2445" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2445 L 2725 2479 L 3157 2479 L 3157 2445" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2445 L 3157 2445" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2940.5" y="2436.5">IntegerToken</text></g><path d="M 2725 2449 L 3157 2449" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2729-2458-424-26-0)" font-size="12px"><text x="2730.5" y="2470.5">+ IntegerToken(std::string value)</text></g><path d="M 2725 2535 L 2725 2509 L 3157 2509 L 3157 2535" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2535 L 2725 2569 L 3157 2569 L 3157 2535" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2535 L 3157 2535" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2940.5" y="2526.5">NameToken</text></g><path d="M 2725 2539 L 3157 2539" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2729-2548-424-26-0)" font-size="12px"><text x="2730.5" y="2560.5">+ NameToken(std::string value)</text></g><path d="M 2725 2615 L 2725 2589 L 3157 2589 L 3157 2615" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2615 L 2725 2649 L 3157 2649 L 3157 2615" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2615 L 3157 2615" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2940.5" y="2606.5">SpecialCharToken</text></g><path d="M 2725 2619 L 3157 2619" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2729-2628-424-26-0)" font-size="12px"><text x="2730.5" y="2640.5">+ SpecialCharToken(std::string value)</text></g><path d="M 2725 2705 L 2725 2679 L 3157 2679 L 3157 2705" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2705 L 2725 2739 L 3157 2739 L 3157 2705" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 2725 2705 L 3157 2705" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2940.5" y="2696.5">StringExpressionToken</text></g><path d="M 2725 2709 L 3157 2709" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2729-2718-424-26-0)" font-size="12px"><text x="2730.5" y="2730.5">+ StringExpressionToken(std::string value)</text></g><path d="M 3157 2369 L 3225 2369 L 3225 2159 L 2461 2159 L 2461 2174.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2461 2187.88 L 2454.5 2174.88 L 2467.5 2174.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3157 2556 L 3225 2556 L 3225 2159 L 2461 2159 L 2461 2174.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2461 2187.88 L 2454.5 2174.88 L 2467.5 2174.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3157 2636 L 3225 2636 L 3225 2159 L 2461 2159 L 2461 2174.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2461 2187.88 L 2454.5 2174.88 L 2467.5 2174.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3157 2726 L 3225 2726 L 3225 2159 L 2461 2159 L 2461 2174.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2461 2187.88 L 2454.5 2174.88 L 2467.5 2174.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1961 2419 L 1961 2474.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1961 2487.88 L 1954.5 2474.88 L 1967.5 2474.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2247 L 1745 2221 L 2177 2221 L 2177 2247" fill="#f5f5f5" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2247 L 1745 2419 L 2177 2419 L 2177 2247" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2247 L 2177 2247" fill="none" stroke="#666666" stroke-miterlimit="10" pointer-events="none"/><g fill="#333333" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1960.5" y="2238.5">SourceTokenizer</text></g><path d="M 1745 2251 L 2177 2251" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1745 2259 L 2177 2259" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2268-424-26-0)" font-size="12px"><text x="1750.5" y="2280.5">+ Tokenizer(std::istream* stream)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2294-424-26-0)" font-size="12px"><text x="1750.5" y="2306.5">+ tokenize(): std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2320-424-26-0)" font-size="12px"><text x="1750.5" y="2332.5">- isValidSpecialChar(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2346-424-26-0)" font-size="12px"><text x="1750.5" y="2358.5">- isPossibleLogicalOp(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2372-424-26-0)" font-size="12px"><text x="1750.5" y="2384.5">- isValidLogicalOp(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1749-2398-424-26-0)" font-size="12px"><text x="1750.5" y="2410.5">- readSpecialChar(): bool</text></g><path d="M 1441 506 L 1441 532 L 1263 532 L 1263 13 L 329 13 L 329 69 L 328.54 95.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 322.24 83.77 L 328.52 96.88 L 335.24 84" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2151 384 L 2151 417 L 2108 417 L 2108 41 L 978 41 L 978 69.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 971.5 57.88 L 978 70.88 L 984.5 57.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 3403 L 78.5 3363 L 510.5 3363 L 510.5 3403" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 3403 L 78.5 3420 L 510.5 3420 L 510.5 3403" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 78.5 3403 L 510.5 3403" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="294" y="3380.5">{abstract}</text><text x="294" y="3394.5">Node</text></g><path d="M 78.5 3410 L 510.5 3410" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3756 L 600 3730 L 1032 3730 L 1032 3756" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3756 L 600 3819 L 1032 3819 L 1032 3756" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3756 L 1032 3756" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="815.5" y="3747.5">ProgramNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3761-424-26-0)" font-size="12px"><text x="605.5" y="3773.5">+ procedureList:  const std::vector&lt;std::shared_ptr&lt;ProcedureNode&gt;&gt;</text></g><path d="M 600 3786 L 1032 3786" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3795-424-28-0)" font-size="12px"><text x="605.5" y="3807.5">+ ProgramNode(std::vector&lt;std::shared_ptr&lt;ProcedureNode&gt;&gt; procedureList)</text></g><path d="M 600 3590 L 600 3564 L 1032 3564 L 1032 3590" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3590 L 600 3691 L 1032 3691 L 1032 3590" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3590 L 1032 3590" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="815.5" y="3581.5">ProcedureNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3595-424-26-0)" font-size="12px"><text x="605.5" y="3607.5">+ procedureName: const std::string </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3621-424-26-0)" font-size="12px"><text x="605.5" y="3633.5">+ stmtListNode: const std::shared_ptr&lt;StmtListNode&gt;</text></g><path d="M 600 3646 L 1032 3646" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3655-424-41-0)" font-size="12px"><text x="605.5" y="3667.5">+ ProcedureNode(std::string procedureName,</text><text x="605.5" y="3681.5">                             std::shared_ptr&lt;StmtListNode&gt; stmtListNode)</text></g><path d="M 600 3466 L 600 3440 L 1032 3440 L 1032 3466" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3466 L 600 3528 L 1032 3528 L 1032 3466" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3466 L 1032 3466" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="815.5" y="3457.5">StmtListNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3471-424-26-0)" font-size="12px"><text x="605.5" y="3483.5">+ stmtList: const std::vector&lt;std::shared_ptr&lt;StmtNode&gt;&gt; </text></g><path d="M 600 3496 L 1032 3496" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3505-424-26-0)" font-size="12px"><text x="605.5" y="3517.5">+ StmtListNode(std::vector&lt;std::shared_ptr&lt;StmtNode&gt;&gt; stmtList)</text></g><path d="M 600 3280 L 600 3241 L 1032 3241 L 1032 3280" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3280 L 600 3397 L 1032 3397 L 1032 3280" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3280 L 1032 3280" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="815.5" y="3258.5">{abstract}</text><text x="815.5" y="3272.5">StmtNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3285-424-26-0)" font-size="12px"><text x="605.5" y="3297.5">+ stmtIndex: const int</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3311-424-26-0)" font-size="12px"><text x="605.5" y="3323.5">+ stmtType: StmtType </text></g><path d="M 600 3336 L 1032 3336" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3345-424-26-0)" font-size="12px"><text x="605.5" y="3357.5">+ StmtNode(int stmtIndex, StmtType stmtType) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3371-424-26-0)" font-size="12px"><text x="605.5" y="3383.5">+ evaluate(IStmtExtractor&amp; extractor) {abstract}</text></g><path d="M 600 3103 L 600 3077 L 1032 3077 L 1032 3103" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3103 L 600 3205 L 1032 3205 L 1032 3103" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3103 L 1032 3103" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="815.5" y="3094.5">CondExprNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3108-424-26-0)" font-size="12px"><text x="605.5" y="3120.5">+ exprVariables: const std::unordered_set&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3134-424-26-0)" font-size="12px"><text x="605.5" y="3146.5">+ exprConstants: const std::unordered_set&lt;int&gt;</text></g><path d="M 600 3159 L 1032 3159" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-604-3168-424-41-0)" font-size="12px"><text x="605.5" y="3180.5">+ CondExprNode(std::unordered_set&lt;std::string&gt; exprVariables, </text><text x="605.5" y="3194.5">std::unordered_set&lt;int&gt; exprConstants)</text></g><path d="M 600 3769 L 560.25 3769 L 560.25 3391.5 L 524.62 3391.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 511.62 3391.5 L 524.62 3385 L 524.62 3398 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3629 L 561 3629 L 561 3391.5 L 524.62 3391.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 511.62 3391.5 L 524.62 3385 L 524.62 3398 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 600 3319 L 561 3319 L 561 3391.5 L 524.62 3391.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 511.62 3391.5 L 524.62 3385 L 524.62 3398 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 604.32 3159.09 L 537 3159 L 537 3392 L 524.62 3392" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 511.62 3392 L 524.62 3385.5 L 524.62 3398.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 816 3730 L 816.41 3693.44" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 822.77 3705.39 L 816.42 3692.32 L 809.78 3705.25" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 816 3564 L 816 3530.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 822.5 3542.12 L 816 3529.12 L 809.5 3542.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 816 3440 L 816 3399.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 822.5 3411.12 L 816 3398.12 L 809.5 3411.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3117 L 1078 3077 L 1510 3077 L 1510 3117" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3117 L 1078 3273 L 1510 3273 L 1510 3117" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3117 L 1510 3117" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 3084px; margin-left: 1079px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; enumeration &gt;&gt;<br />StmtType</div></div></div></foreignObject><text x="1294" y="3096" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; enumeration &gt;&gt;...</text></switch></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3122-424-26-0)" font-size="12px"><text x="1083.5" y="3134.5">STMT_ASSIGN</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3148-424-26-0)" font-size="12px"><text x="1083.5" y="3160.5">STMT_CALL</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3174-424-26-0)" font-size="12px"><text x="1083.5" y="3186.5">STMT_WHILE</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3200-424-26-0)" font-size="12px"><text x="1083.5" y="3212.5">STMT_IF</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3226-424-26-0)" font-size="12px"><text x="1083.5" y="3238.5">STMT_PRINT</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3252-424-26-0)" font-size="12px"><text x="1083.5" y="3264.5">STMT_READ</text></g><path d="M 1547 3585 L 1547 3559 L 1979 3559 L 1979 3585" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1547 3585 L 1547 3649 L 1979 3649 L 1979 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1547 3585 L 1979 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1762.5" y="3576.5">VariableNameNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1551-3590-424-26-0)" font-size="12px"><text x="1552.5" y="3602.5">+ varName: const std::string </text></g><path d="M 1547 3615 L 1979 3615" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1551-3624-424-26-0)" font-size="12px"><text x="1552.5" y="3636.5">+ VariableNameNode(int stmtIndex, std::string varName, StmtType stmtType) </text></g><path d="M 1078 3585 L 1078 3559 L 1510 3559 L 1510 3585" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3585 L 1078 3679 L 1510 3679 L 1510 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3585 L 1510 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1293.5" y="3576.5">CallNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3590-424-26-0)" font-size="12px"><text x="1083.5" y="3602.5">+ procedureName: const std::string</text></g><path d="M 1078 3615 L 1510 3615" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3624-424-26-0)" font-size="12px"><text x="1083.5" y="3636.5">+ CallNode(int stmtIndex, std::string procedureName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1082-3650-424-24-0)" font-size="12px"><text x="1083.5" y="3662.5">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 1077.57 3628.67 L 1059 3628.75 L 1059 3354 L 1056 3354 L 1046.11 3353.59" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1033.12 3353.05 L 1046.38 3347.09 L 1045.84 3360.08 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 3585 L 2040 3559 L 2472 3559 L 2472 3585" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 3585 L 2040 3751 L 2472 3751 L 2472 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 3585 L 2472 3585" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2255.5" y="3576.5">IfNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-3590-424-26-0)" font-size="12px"><text x="2045.5" y="3602.5">+ condExprNode: const std::shared_ptr&lt;CondExprNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-3616-424-26-0)" font-size="12px"><text x="2045.5" y="3628.5">+ thenStmtListNode: const std::shared_ptr&lt;StmtListNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-3642-424-26-0)" font-size="12px"><text x="2045.5" y="3654.5">+ elseStmtListNode: const std::shared_ptr&lt;StmtListNode&gt;</text></g><path d="M 2040 3667 L 2472 3667" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-3676-424-56-0)" font-size="12px"><text x="2045.5" y="3688.5">+ IfNode(int stmtIndex, std::shared_ptr&lt;CondExprNode&gt; condExprNode, </text><text x="2045.5" y="3702.5">               std::shared_ptr&lt;StmtListNode&gt; thenStmtListNode,</text><text x="2045.5" y="3716.5">               std::shared_ptr&lt;StmtListNode&gt; elseStmtListNode)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-3732-424-24-0)" font-size="12px"><text x="2045.5" y="3744.5">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 2500 3586 L 2500 3560 L 2932 3560 L 2932 3586" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2500 3586 L 2500 3714 L 2932 3714 L 2932 3586" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2500 3586 L 2932 3586" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2715.5" y="3577.5">WhileNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2504-3591-424-26-0)" font-size="12px"><text x="2505.5" y="3603.5">+ condExprNode: const std::shared_ptr&lt;CondExprNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2504-3617-424-26-0)" font-size="12px"><text x="2505.5" y="3629.5">+ StmtListNode: const std::shared_ptr&lt;StmtListNode&gt;</text></g><path d="M 2500 3642 L 2932 3642" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2504-3651-424-44-0)" font-size="12px"><text x="2505.5" y="3663.5">+ WhileNode(int stmtIndex, std::shared_ptr&lt;CondExprNode&gt; condExprNode, </text><text x="2505.5" y="3677.5">                      std::shared_ptr&lt;StmtListNode&gt; stmtListNode)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2504-3695-424-24-0)" font-size="12px"><text x="2505.5" y="3707.5">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 1763 3649 L 1763 3700 L 1060 3700 L 1060 3353 L 1046.12 3353" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1033.12 3353 L 1046.12 3346.5 L 1046.12 3359.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2716 3714 L 2716 3801 L 1059 3801 L 1059 3353 L 1046.12 3353" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1033.12 3353 L 1046.12 3346.5 L 1046.12 3359.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1554.14 3368.02 L 1541 3369 L 1541 3528 L 1763 3528 L 1763 3544.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1763 3557.88 L 1756.5 3544.88 L 1769.5 3544.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3460 L 1541 3460 L 1541 3528 L 1763 3528 L 1763 3544.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1763 3557.88 L 1756.5 3544.88 L 1769.5 3544.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3222 L 1541 3222 L 1541 3528 L 1763 3528 L 1763 3544.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1763 3557.88 L 1756.5 3544.88 L 1769.5 3544.88 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3340 L 1555 3314 L 1987 3314 L 1987 3340" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3340 L 1555 3404 L 1987 3404 L 1987 3340" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3340 L 1987 3340" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1770.5" y="3331.5">PrintNode</text></g><path d="M 1555 3344 L 1987 3344" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3353-424-26-0)" font-size="12px"><text x="1560.5" y="3365.5">+ PrintNode(int stmtIndex, std::string varName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3379-424-26-0)" font-size="12px"><text x="1560.5" y="3391.5">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 1555 3439 L 1555 3413 L 1987 3413 L 1987 3439" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3439 L 1555 3503 L 1987 3503 L 1987 3439" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3439 L 1987 3439" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1770.5" y="3430.5">ReadNode</text></g><path d="M 1555 3443 L 1987 3443" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3452-424-26-0)" font-size="12px"><text x="1560.5" y="3464.5">+ ReadNode(int stmtIndex, std::string varName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3478-424-26-0)" font-size="12px"><text x="1560.5" y="3490.5">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 1555 3103.5 L 1555 3077.5 L 1987 3077.5 L 1987 3103.5" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3103.5 L 1555 3280 L 1987 3280 L 1987 3103.5" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1555 3103.5 L 1987 3103.5" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1770.5" y="3095">AssignNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3109-424-26-0)" font-size="12px"><text x="1560.5" y="3121">+ shuntNode: const std::shared_ptr&lt;ShuntNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3135-424-26-0)" font-size="12px"><text x="1560.5" y="3147">+ exprVariables: const std::unordered_set&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3161-424-26-0)" font-size="12px"><text x="1560.5" y="3173">+ exprConstants: const std::unordered_set&lt;int&gt;</text></g><path d="M 1555 3185.5 L 1987 3185.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3195-424-65-0)" font-size="12px"><text x="1560.5" y="3207">+ AssignNode(int stmtIndex, std::string varName, </text><text x="1560.5" y="3221">                std::shared_ptr&lt;ShuntNode&gt; shutNode,</text><text x="1560.5" y="3235">               std::unordered_set&lt;std::string&gt; exprVariables,</text><text x="1560.5" y="3249">               std::unordered_set&lt;int&gt; exprConstants)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1559-3260-424-24-0)" font-size="12px"><text x="1560.5" y="3272">+ evaluate(IStmtExtractor&amp; extractor)</text></g><path d="M 2757.04 3555.84 L 2757 3519 L 1053 3519 L 1053 3479 L 1034.24 3479" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1046.12 3472.5 L 1033.12 3479 L 1046.12 3485.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2716 3560 L 2691 3560 L 2691 3042 L 816 3042 L 816 3074.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 809.5 3062.88 L 816 3075.88 L 822.5 3062.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1200 2649 L 1200 2609 L 1632 2609 L 1632 2649" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1200 2649 L 1200 2969 L 1632 2969 L 1632 2649" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 1200 2649 L 1632 2649" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 2616px; margin-left: 1201px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">{abstract}<br />AbstractParser</div></div></div></foreignObject><text x="1416" y="2628" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">{abstract}...</text></switch></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2654-424-26-0)" font-size="12px"><text x="1205.5" y="2666.5"># index: int</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2680-424-26-0)" font-size="12px"><text x="1205.5" y="2692.5">#tokens: std::vector&lt;std::shared_ptr&lt;Token&gt;&gt;</text></g><path d="M 1200 2705 L 1632 2705" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2714-424-26-0)" font-size="12px"><text x="1205.5" y="2726.5">+ AbstractParser(std::vector&lt;std::shared_ptr&lt;Token&gt;&gt; tokens)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2740-424-26-0)" font-size="12px"><text x="1205.5" y="2752.5">+ parse() {abstract} </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2766-424-26-0)" font-size="12px"><text x="1205.5" y="2778.5"># hasNext(): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2792-424-26-0)" font-size="12px"><text x="1205.5" y="2804.5"># isTypeOf(TokenType type): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2818-424-26-0)" font-size="12px"><text x="1205.5" y="2830.5"># isValueOf(const std::string&amp; value): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2844-424-26-0)" font-size="12px"><text x="1205.5" y="2856.5"># getToken(): std::shared_ptr&lt;Token&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2870-424-26-0)" font-size="12px"><text x="1205.5" y="2882.5"># getNext(): std::shared_ptr&lt;Token&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2896-424-26-0)" font-size="12px"><text x="1205.5" y="2908.5"># getEOF: std::shared_ptr&lt;Token&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2922-424-26-0)" font-size="12px"><text x="1205.5" y="2934.5"># parseNext(TokenType type)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1204-2948-424-26-0)" font-size="12px"><text x="1205.5" y="2960.5"># parseNext(const std::string&amp; value): std::shared_ptr&lt;Token&gt;</text></g><path d="M 1121.47 2594.44 L 1155.5 2594.5 L 1155.5 2828.5 L 1185.45 2828.46" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1198.45 2828.45 L 1185.46 2834.96 L 1185.44 2821.96 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2241 L 655 2215 L 1121 2215 L 1121 2241" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2241 L 655 2983 L 1121 2983 L 1121 2241" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2241 L 1121 2241" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="887.5" y="2232.5">SourceParser</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2246-458-26-0)" font-size="12px"><text x="660.5" y="2258.5">- programRoot: std::shared_ptr&lt;ProgramNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2272-458-26-0)" font-size="12px"><text x="660.5" y="2284.5">- stmtIndex: int</text></g><path d="M 655 2297 L 1121 2297" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2306-458-26-0)" font-size="12px"><text x="660.5" y="2318.5">+ SourceParser(std::vector&lt;std::shared_ptr&lt;Token&gt;&gt; tokens)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2332-458-26-0)" font-size="12px"><text x="660.5" y="2344.5">+ parse()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2358-458-26-0)" font-size="12px"><text x="660.5" y="2370.5">+ getProgramNode(): std::shared_ptr&lt;ProgramNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2384-458-26-0)" font-size="12px"><text x="660.5" y="2396.5">- parseProgram(): std::shared_ptr&lt;ProgramNode&gt; </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2410-458-26-0)" font-size="12px"><text x="660.5" y="2422.5">- parseProcedure(): std::shared_ptr&lt;ProcedureNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2436-458-26-0)" font-size="12px"><text x="660.5" y="2448.5">- parseStmtList(): std::shared_ptr&lt;StmtListNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2462-458-26-0)" font-size="12px"><text x="660.5" y="2474.5">- parseRead(): std::shared_ptr&lt;ReadNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2488-458-26-0)" font-size="12px"><text x="660.5" y="2500.5">- parsePrint(): std::shared_ptr&lt;PrintNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2514-458-26-0)" font-size="12px"><text x="660.5" y="2526.5">- parseCall(): std::shared_ptr&lt;CallNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2540-458-26-0)" font-size="12px"><text x="660.5" y="2552.5">- parseWhile(): std::shared_ptr&lt;WhileNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2566-458-26-0)" font-size="12px"><text x="660.5" y="2578.5">- parseIf(): std::shared_ptr&lt;IfNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2592-458-26-0)" font-size="12px"><text x="660.5" y="2604.5">- parseAssign(std::shared_ptr&lt;Token&gt; nameToken): std::shared_ptr&lt;AssignNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2618-458-26-0)" font-size="12px"><text x="660.5" y="2630.5">- parseConditional(): std::shared_ptr&lt;CondExprNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-659-2644-458-26-0)" font-size="12px"><text x="660.5" y="2656.5">- buildConditionalExpr(std::queue&lt;std::shared_ptr&lt;Token&gt;&gt;&amp; postfix): std::shared_ptr&lt;CondExprNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2670-458-26-0)" font-size="12px"><text x="660.5" y="2682.5">- isCondOp(const std::string&amp; value): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2696-458-26-0)" font-size="12px"><text x="660.5" y="2708.5">- isMathOp(const std::string&amp; value): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2722-458-26-0)" font-size="12px"><text x="660.5" y="2734.5">- isRelOp(const std::string&amp; value): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2748-458-26-0)" font-size="12px"><text x="660.5" y="2760.5">- isGreaterOrEqualRank(const std::string&amp; lhs, const std::string&amp; rhs): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2774-458-26-0)" font-size="12px"><text x="660.5" y="2786.5">- popExprHelper(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2800-458-26-0)" font-size="12px"><text x="660.5" y="2812.5">- continueExprHelper(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2826-458-26-0)" font-size="12px"><text x="660.5" y="2838.5">- popCondExprHelper(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2852-458-26-0)" font-size="12px"><text x="660.5" y="2864.5">- continueCondExprHelper(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2878-458-26-0)" font-size="12px"><text x="660.5" y="2890.5">- checkStackSize(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2904-458-26-0)" font-size="12px"><text x="660.5" y="2916.5">- handleMathOp(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2930-458-29-0)" font-size="12px"><text x="660.5" y="2942.5">- handleRelOp(std::stack&lt;HelperNode&gt;&amp; result)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-659-2959-458-26-0)" font-size="12px"><text x="660.5" y="2971.5">- handleCondOp(std::stack&lt;HelperNode&gt;&amp; result)</text></g><path d="M 1416 2969 L 1416 2974 L 2206 2974 L 2206 2228 L 2242.76 2228" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2230.88 2234.5 L 2243.88 2228 L 2230.88 2221.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2019 2101 L 2019 2154 L 888 2154 L 888 2212.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 881.5 2200.88 L 888 2213.88 L 894.5 2200.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3142 L 597.76 3142" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 585.88 3148.5 L 598.88 3142 L 585.88 3135.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2599 L 18 2599 L 18 3487 L 597.76 3487" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 585.88 3493.5 L 598.88 3487 L 585.88 3480.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3647 L 597.76 3647" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 585.88 3653.5 L 598.88 3647 L 585.88 3640.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3788 L 595.6 3788.01" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 583.72 3794.51 L 596.72 3788.01 L 583.72 3781.51" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3899 L 2168 3899 L 2168 3763.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2174.5 3775.12 L 2168 3762.12 L 2161.5 3775.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3979 L 2752 3979 L 2752 3724.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2758.5 3736.12 L 2752 3723.12 L 2745.5 3736.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 655 2392 L 655 2600 L 18 2600 L 18 3978 L 1294 3978 L 1294 3681.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 1300.5 3693.12 L 1294 3680.12 L 1287.5 3693.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2009 3368 L 1998 3368 L 1989.24 3368.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2000.93 3361.42 L 1988.12 3368.27 L 2001.29 3374.41" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 12.63 3869 L 2009 3869 L 2009 3222 L 1989.24 3222" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2001.12 3215.5 L 1988.12 3222 L 2001.12 3228.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1281 L 1435 1241 L 1867 1241 L 1867 1281" fill="#e1d5e7" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1281 L 1435 1315 L 1867 1315 L 1867 1281" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><path d="M 1435 1281 L 1867 1281" fill="none" stroke="#9673a6" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 430px; height: 1px; padding-top: 1248px; margin-left: 1436px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IExtractor</div></div></div></foreignObject><text x="1651" y="1260" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 1435 1285 L 1867 1285" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1439-1294-424-26-0)" font-size="12px"><text x="1440.5" y="1306.5">+ extractProgram(const std::shared_ptr&lt;ProgramNode&gt;&amp; node)</text></g><path d="M 322.5 2160 L 322.5 2140 L 322.5 2147 L 322.5 2131.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 322.5 2118.12 L 329 2131.12 L 316 2131.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 2200 L 45 2160 L 600 2160 L 600 2200" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 2200 L 45 2312 L 600 2312 L 600 2200" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 2200 L 600 2200" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 553px; height: 1px; padding-top: 2167px; margin-left: 46px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IPatternStore</div></div></div></foreignObject><text x="323" y="2179" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 45 2204 L 600 2204" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2213-547-26-0)" font-size="12px"><text x="50.5" y="2225.5">+ insertExpressionPattern(std::shared_ptr&lt;AssignNode&gt; node)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2239-547-26-0)" font-size="12px"><text x="50.5" y="2251.5">+ insertCondExpressionIfStatement(int stmtIndex, std::string variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2265-547-26-0)" font-size="12px"><text x="50.5" y="2277.5">+ insertCondExpressionWhileStatement(int stmtIndex, std::string variableName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-49-2291-547-26-0)" font-size="12px"><text x="50.5" y="2303.5">+ invokePostReversePattern()</text></g><path d="M 37 253 L 37 213 L 620 213 L 620 253" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 37 253 L 37 547 L 620 547 L 620 253" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 37 253 L 620 253" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 581px; height: 1px; padding-top: 220px; margin-left: 38px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IRelationshipStoreBase</div></div></div></foreignObject><text x="329" y="232" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 37 257 L 620 257" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-266-575-26-0)" font-size="12px"><text x="42.5" y="278.5">+ insertFollowsRelationship(const int &amp;previousStmtNo, const int &amp;currentStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-292-575-26-0)" font-size="12px"><text x="42.5" y="304.5">+ insertParentsRelationship(const int &amp;parentStmtNo, const int &amp;childStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-318-575-26-0)" font-size="12px"><text x="42.5" y="330.5">+ insertFollowsTRelationship(const int &amp;previousStmtNo, const int &amp;currentStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-344-575-26-0)" font-size="12px"><text x="42.5" y="356.5">+ insertParentsTRelationship(const int &amp;parentStmtNo, const int &amp;childStmtNo)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-370-575-26-0)" font-size="12px"><text x="42.5" y="382.5">+ insertUsesSRelationship(const int &amp;stmtNo, const std::string &amp;variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-396-575-26-0)" font-size="12px"><text x="42.5" y="408.5">+ insertModifiesSRelationship(const int &amp;stmtNo, const std::string &amp;variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-422-575-26-0)" font-size="12px"><text x="42.5" y="434.5">+ insertUsesPRelationship(std::string  &amp;procedureName, const std::string &amp;variableName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-448-575-26-0)" font-size="12px"><text x="42.5" y="460.5">+ insertModifiesPRelationship(std::string  &amp;procedureName, const std::string &amp;variableName) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-474-575-26-0)" font-size="12px"><text x="42.5" y="486.5">+ insertCallsRelationship(const int &amp;stmtNo, const std::string &amp;callerName, const std::string &amp;calleeName)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-500-575-26-0)" font-size="12px"><text x="42.5" y="512.5">+ insertCallsTRelationship(std::string caller, std::string callee)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-526-575-26-0)" font-size="12px"><text x="42.5" y="538.5">+ insertNextRelationship(int previousStmtNo, int currStmtNo)</text></g><path d="M 37 636 L 37 596 L 620 596 L 620 636" fill="#ffe6cc" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 37 636 L 37 878 L 620 878 L 620 636" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><path d="M 37 636 L 620 636" fill="none" stroke="#d79b00" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 581px; height: 1px; padding-top: 603px; margin-left: 38px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">&lt;&lt; interface &gt;&gt;<br />IRelationshipStoreHelper</div></div></div></foreignObject><text x="329" y="615" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">&lt;&lt; interface &gt;&gt;...</text></switch></g><path d="M 37 640 L 620 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-649-575-26-0)" font-size="12px"><text x="42.5" y="661.5">+ invokePostReverseRelationship()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-675-575-26-0)" font-size="12px"><text x="42.5" y="687.5">+ invokePreReverseRelationship()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-701-575-26-0)" font-size="12px"><text x="42.5" y="713.5">+ procedureEntitiesContains(std::string procedureName): bool </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-727-575-26-0)" font-size="12px"><text x="42.5" y="739.5">+ callsPReadContains(std::string procedureName1, std::string procedureName2): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-753-575-26-0)" font-size="12px"><text x="42.5" y="765.5">+ getProcedureEntities(): std::unordered_set&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-779-575-26-0)" font-size="12px"><text x="42.5" y="791.5">+ getCallsPReversedRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-805-575-26-0)" font-size="12px"><text x="42.5" y="817.5">+ getCallsTRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-831-575-26-0)" font-size="12px"><text x="42.5" y="843.5">+ getModifiesPRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-41-857-575-26-0)" font-size="12px"><text x="42.5" y="869.5">+ getUsesPRelationship(): std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt;&gt;</text></g><path d="M 1194 802 L 1214 802 L 1214 1153 L 708 1153 L 708 1514 L 716.29 1514" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 729.29 1514 L 722.79 1520.5 L 716.29 1514 L 722.79 1507.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2049 3103.5 L 2049 3077.5 L 2481 3077.5 L 2481 3103.5" fill="#b0e3e6" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2049 3103.5 L 2049 3395.5 L 2481 3395.5 L 2481 3103.5" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><path d="M 2049 3103.5 L 2481 3103.5" fill="none" stroke="#0e8088" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2264.5" y="3095">ShuntNode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2053-3109-424-26-0)" font-size="12px"><text x="2054.5" y="3121">+ value: const std::string </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2053-3135-424-26-0)" font-size="12px"><text x="2054.5" y="3147">+ left: std::shared_ptr&lt;ShuntNode&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2053-3161-424-26-0)" font-size="12px"><text x="2054.5" y="3173">+ right: std::shared_ptr&lt;ShuntNode&gt;</text></g><path d="M 2049 3185.5 L 2481 3185.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2053-3195-424-25-0)" font-size="12px"><text x="2054.5" y="3207">+ ShuntNode(std::string value) </text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-2053-3220-424-37-0)" font-size="12px"><text x="2054.5" y="3232">- isSubVector(std::vector&lt;std::string&gt; stringVector, </text><text x="2054.5" y="3246">std::vector&lt;std::string&gt; subVector): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-2053-3257-424-39-0)" font-size="12px"><text x="2054.5" y="3269">+ getInOrderTraversal(const std::shared_ptr&lt;ShuntNode&gt;&amp; node): </text><text x="2054.5" y="3283">std::vector&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-2053-3296-424-39-0)" font-size="12px"><text x="2054.5" y="3308">+ getPreOrderTraversal(const std::shared_ptr&lt;ShuntNode&gt;&amp; node): </text><text x="2054.5" y="3322">std::vector&lt;std::string&gt;</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" text-decoration="underline" pointer-events="none" clip-path="url(#mx-clip-2053-3335-424-39-0)" font-size="12px"><text x="2054.5" y="3347">+ isSubTree(const std::shared_ptr&lt;ShuntNode&gt;&amp; fullTree, </text><text x="2054.5" y="3361">const std::shared_ptr&lt;ShuntNode&gt;&amp; partialTree): bool</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2053-3374-424-27-0)" font-size="12px"><text x="2054.5" y="3386">+ operator==(const ShuntNode&amp; other): bool</text></g><path d="M 2049.43 3187.77 L 2022 3187.75 L 1988.37 3187.32" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2000.34 3180.97 L 1987.25 3187.3 L 2000.17 3193.97" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1078 3182 L 1049 3183 L 1049 3320 L 1032 3320" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2256 3559 L 2256 3445 L 2690 3442" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2008 3462 L 1997 3462 L 1988.24 3462" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 2000.12 3455.5 L 1987.12 3462 L 2000.12 3468.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2256 3751 L 2256 3801 L 1059 3801 L 1059 3353 L 1046.12 3353" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1033.12 3353 L 1046.12 3346.5 L 1046.12 3359.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2308.7 3560.15 L 2309 3518" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>